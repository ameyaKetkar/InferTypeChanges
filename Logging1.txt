Apr 22, 2021 4:34:03 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newDir -> newDir
true,class org.eclipse.jdt.core.dom.Block,File page=new File(newDir,"page.html");
class org.eclipse.jdt.core.dom.BlocktruePath page=newDir.resolve("page.html");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:34:04 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:34:04 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newDir -> newDir
true,class org.eclipse.jdt.core.dom.Block,File innerDir=new File(newDir,"innerDir");
class org.eclipse.jdt.core.dom.BlocktruePath innerDir=newDir.resolve("innerDir");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:34:06 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:34:06 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newDir -> newDir
true,class org.eclipse.jdt.core.dom.Block,File innerSymlink=new File(newDir,"innerSymlink");
class org.eclipse.jdt.core.dom.BlocktruePath innerSymlink=newDir.resolve("innerSymlink");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:34:07 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:34:07 PM Utilities.ASTUtils printCodeMappingStuff
INFO: root -> root
true,class org.eclipse.jdt.core.dom.Block,return root.getAbsolutePath() + canonicalPath;
class org.eclipse.jdt.core.dom.Blocktruereturn root.toAbsolutePath().toString() + canonicalPath;
METHOD_INVOCATION
Apr 22, 2021 4:34:11 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 4:34:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,rootPath.getAbsolutePath().concat("/innerSymlink"))).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,rootPath.toAbsolutePath().toString().concat("/innerSymlink"))).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:35:05 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:35:05 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> tmpDir
true,class org.eclipse.jdt.core.dom.Block,DeploymentInfo builder=new DeploymentInfo().setClassIntrospecter(TestClassIntrospector.INSTANCE).setClassLoader(ServletPathMappingTestCase.class.getClassLoader()).setContextPath("/servletContext").setDeploymentName("servletContext.war").setResourceManager(new CachingResourceManager(100,10000,new DirectBufferCache(1000,10,1000 * 10 * 1000,BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR,METADATA_MAX_AGE),new FileResourceManager(tmpDir,10485760),METADATA_MAX_AGE));
class org.eclipse.jdt.core.dom.BlocktrueDeploymentInfo builder=new DeploymentInfo().setClassIntrospecter(TestClassIntrospector.INSTANCE).setClassLoader(ServletPathMappingTestCase.class.getClassLoader()).setContextPath("/servletContext").setDeploymentName("servletContext.war").setResourceManager(new CachingResourceManager(100,10000,new DirectBufferCache(1000,10,1000 * 10 * 1000,BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR,METADATA_MAX_AGE),new PathResourceManager(tmpDir,10485760),METADATA_MAX_AGE));
TYPE
Apr 22, 2021 4:35:05 PM type.change.Infer inferTransformation
INFO: TOO LARGE!!!
Apr 22, 2021 4:35:05 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> tmpDir
true,class org.eclipse.jdt.core.dom.Block,File f=new File(tmpDir,fileName);
class org.eclipse.jdt.core.dom.BlocktruePath f=tmpDir.resolve(fileName);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:35:06 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:35:06 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> tmpDir
true,class org.eclipse.jdt.core.dom.Block,File f=new File(tmpDir,fileName);
class org.eclipse.jdt.core.dom.BlocktruePath f=tmpDir.resolve(fileName);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:35:08 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:35:08 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> tmpDir
true,class org.eclipse.jdt.core.dom.Block,File f=new File(tmpDir,fileName);
class org.eclipse.jdt.core.dom.BlocktruePath f=tmpDir.resolve(fileName);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:35:09 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:35:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,Channels.transferBlocking(response,fileChannel,0,file.length());
class org.eclipse.jdt.core.dom.BlocktrueChannels.transferBlocking(response,fileChannel,0,Files.size(file));
METHOD_INVOCATION
Apr 22, 2021 4:35:12 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].length(), Files.size(:[9x2]))
Apr 22, 2021 4:35:12 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directory -> directory
true,class org.eclipse.jdt.core.dom.Block,File logFileName=new File(directory,"server1.logsuffix");
class org.eclipse.jdt.core.dom.BlocktruePath logFileName=directory.resolve("server1.logsuffix");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:35:13 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:35:13 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> tmpDir
true,class org.eclipse.jdt.core.dom.Block,final FileResourceManager resourceManager=new FileResourceManager(tmpDir,10485760);
class org.eclipse.jdt.core.dom.Blocktruefinal PathResourceManager resourceManager=new PathResourceManager(tmpDir,10485760);
TYPE
Apr 22, 2021 4:35:15 PM type.change.Infer inferTransformation
INFO: (new FileResourceManager(:[2x1],:[2x2]), new PathResourceManager(:[2x1],:[2x2]))
Apr 22, 2021 4:35:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> tmpDir
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new ResourceHandler().setResourceManager(resourceManager).setContentEncodedResourceManager(new ContentEncodedResourceManager(tmpDir,new CachingResourceManager(100,10000,null,resourceManager,-1),new ContentEncodingRepository().addEncodingHandler("deflate",new DeflateEncodingProvider(),50,null),0,100000,null)));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new ResourceHandler(resourceManager).setContentEncodedResourceManager(new ContentEncodedResourceManager(tmpDir,new CachingResourceManager(100,10000,null,resourceManager,-1),new ContentEncodingRepository().addEncodingHandler("deflate",new DeflateEncodingProvider(),50,null),0,100000,null)));
METHOD_INVOCATION_ARGUMENT_WRAPPED
Apr 22, 2021 4:35:37 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 4:35:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> tmpDir
true,class org.eclipse.jdt.core.dom.Block,File f=new File(tmpDir,fileName);
class org.eclipse.jdt.core.dom.BlocktruePath f=tmpDir.resolve(fileName);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:35:38 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:35:38 PM Utilities.ASTUtils printCodeMappingStuff
INFO: rootPath -> rootPath
true,class org.eclipse.jdt.core.dom.Block,File newDir=new File(rootPath,"newDir");
class org.eclipse.jdt.core.dom.BlocktruePath newDir=rootPath.resolve("newDir");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:35:39 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:35:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: rootPath -> rootPath
true,class org.eclipse.jdt.core.dom.Block,File newSymlink=new File(rootPath,"newSymlink");
class org.eclipse.jdt.core.dom.BlocktruePath newSymlink=rootPath.resolve("newSymlink");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:35:41 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:35:41 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,resources.add(file.getPath());
class org.eclipse.jdt.core.dom.Blocktrueresources.add(file.toString());
METHOD_INVOCATION
Apr 22, 2021 4:35:43 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getPath(), :[9x2].toString())
Apr 22, 2021 4:35:43 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,String filePath=file.getAbsolutePath().substring(base.getAbsolutePath().length());
class org.eclipse.jdt.core.dom.BlocktrueString filePath=file.toAbsolutePath().toString().substring(base.toAbsolutePath().toString().length());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:35:58 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 4:35:58 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 4:35:58 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,if(file.isDirectory())
class org.eclipse.jdt.core.dom.Blocktrueif(Files.isDirectory(file))
METHOD_INVOCATION
Apr 22, 2021 4:35:59 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].isDirectory(), Files.isDirectory(:[9x2]))
Apr 22, 2021 4:35:59 PM Utilities.ASTUtils printCodeMappingStuff
INFO: innerSymlink -> innerSymlink
true,class org.eclipse.jdt.core.dom.Block,Path innerSymlinkPath=innerSymlink.toPath();
class org.eclipse.jdt.core.dom.BlocktruePath f=innerSymlink.getRoot();
VARIABLE_NAME METHOD_INVOCATION_NAME
Apr 22, 2021 4:36:00 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2].getRoot())
Apr 22, 2021 4:36:00 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,String filePath=file.getAbsolutePath().substring(base.getAbsolutePath().length());
class org.eclipse.jdt.core.dom.BlocktrueString filePath=file.toAbsolutePath().toString().substring(base.toAbsolutePath().toString().length());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:36:16 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 4:36:16 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 4:36:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directory -> directory
true,class org.eclipse.jdt.core.dom.Block,File logFileName=new File(directory,"server1.log");
class org.eclipse.jdt.core.dom.BlocktruePath logFileName=directory.resolve("server1.log");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:36:17 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:36:17 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,return new FileResource(file,this,path);
class org.eclipse.jdt.core.dom.Blocktruereturn new PathResource(file,this,path);
TYPE
Apr 22, 2021 4:36:18 PM type.change.Infer inferTransformation
INFO: (new FileResource(:[2x1],:[2x2],:[2x3]), new PathResource(:[2x1],:[2x2],:[2x3]))
Apr 22, 2021 4:36:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,return new FileResource(file,this,path);
class org.eclipse.jdt.core.dom.Blocktruereturn new PathResource(file,this,path);
TYPE
Apr 22, 2021 4:36:19 PM type.change.Infer inferTransformation
INFO: (new FileResource(:[2x1],:[2x2],:[2x3]), new PathResource(:[2x1],:[2x2],:[2x3]))
Apr 22, 2021 4:36:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,File innerSymlink=new File(newSymlink,"innerSymlink");
class org.eclipse.jdt.core.dom.BlocktruePath innerSymlink=newSymlink.resolve("innerSymlink");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:36:20 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:36:20 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newDir -> newDir
true,class org.eclipse.jdt.core.dom.Block,File innerDir=new File(newDir,"innerDir");
class org.eclipse.jdt.core.dom.BlocktruePath innerDir=newDir.resolve("innerDir");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:36:22 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:36:22 PM Utilities.ASTUtils printCodeMappingStuff
INFO: innerDir -> innerDir
true,class org.eclipse.jdt.core.dom.Block,File innerPage=new File(innerDir,"page.html");
class org.eclipse.jdt.core.dom.BlocktruePath innerPage=innerDir.resolve("page.html");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:36:23 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:36:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logFileName -> logFileName
true,class org.eclipse.jdt.core.dom.Block,Assert.assertEquals("Remote address " + DefaultServer.getDefaultServerAddress().getAddress().getHostAddress() + " Code 200 test-header v1\n",FileUtils.readFile(logFileName));
class org.eclipse.jdt.core.dom.BlocktrueAssert.assertFalse(Files.exists(logFileName));
METHOD_INVOCATION METHOD_INVOCATION_NAME_AND_ARGUMENT
Apr 22, 2021 4:36:31 PM type.change.Infer inferTransformation
INFO: (Assert.assertEquals(:[11x1],FileUtils.readFile(logFileName)), Assert.assertFalse(Files.exists(logFileName)))
Apr 22, 2021 4:36:31 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logFileName -> logFileName
true,class org.eclipse.jdt.core.dom.Block,Assert.assertFalse(logFileName.exists());
class org.eclipse.jdt.core.dom.BlocktrueAssert.assertFalse(Files.exists(logFileName));
METHOD_INVOCATION
Apr 22, 2021 4:36:33 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:36:33 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logFileName -> logFileName
true,class org.eclipse.jdt.core.dom.Block,Assert.assertFalse(logFileName.exists());
class org.eclipse.jdt.core.dom.BlocktrueAssert.assertEquals("Remote address " + DefaultServer.getDefaultServerAddress().getAddress().getHostAddress() + " Code 200 test-header v2\n",new String(Files.readAllBytes(logFileName)));
METHOD_INVOCATION METHOD_INVOCATION_NAME_AND_ARGUMENT
Apr 22, 2021 4:36:39 PM type.change.Infer inferTransformation
INFO: (Assert.assertFalse(logFileName.exists()), Assert.assertEquals(:[11x1],new String(Files.readAllBytes(logFileName))))
Apr 22, 2021 4:36:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: encodedResourcesRoot -> encodedResourcesRoot
true,class org.eclipse.jdt.core.dom.Block,final File finalTarget=new File(encodedResourcesRoot,newPath);
class org.eclipse.jdt.core.dom.Blocktruefinal Path finalTarget=encodedResourcesRoot.resolve(newPath);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:36:41 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:36:41 PM Utilities.ASTUtils printCodeMappingStuff
INFO: encodedResourcesRoot -> encodedResourcesRoot
true,class org.eclipse.jdt.core.dom.Block,final File tempTarget=new File(encodedResourcesRoot,newPath);
class org.eclipse.jdt.core.dom.Blocktruefinal Path tempTarget=encodedResourcesRoot.resolve(newPath);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:36:43 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:36:43 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,"/")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,"/")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:37:36 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:37:36 PM Utilities.ASTUtils printCodeMappingStuff
INFO: f -> child
true,class org.eclipse.jdt.core.dom.Block,for(f; file.listFiles())
class org.eclipse.jdt.core.dom.Blocktruefor(f; stream)
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_NAME
Apr 22, 2021 4:37:38 PM type.change.Infer inferTransformation
INFO: (file.listFiles(), stream)
Apr 22, 2021 4:37:38 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newDir -> newDir
true,class org.eclipse.jdt.core.dom.Block,File innerDir=new File(newDir,"innerDir");
class org.eclipse.jdt.core.dom.BlocktruePath innerDir=newDir.resolve("innerDir");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:37:39 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:37:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newDir -> newDir
true,class org.eclipse.jdt.core.dom.Block,File innerSymlink=new File(newDir,"innerSymlink");
class org.eclipse.jdt.core.dom.BlocktruePath innerSymlink=newDir.resolve("innerSymlink");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:37:40 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:37:40 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,"")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,"")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:38:34 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:38:34 PM Utilities.ASTUtils printCodeMappingStuff
INFO: outputDirectory -> outputDirectory
true,class org.eclipse.jdt.core.dom.Block,File newFile=new File(outputDirectory,logBaseName + "_" + currentDateString+ logNameSuffix);
class org.eclipse.jdt.core.dom.BlocktruePath newFile=outputDirectory.resolve(logBaseName + "_" + currentDateString+ logNameSuffix);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:38:40 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:38:40 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,rootPath.getAbsolutePath().concat("/newDir"))).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,rootPath.toAbsolutePath().toString().concat("/newDir"))).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:39:34 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:39:34 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,rootPath.getAbsolutePath().concat("/newDir"))).setDirectoryListingEnabled(false).addWelcomeFiles("page.html")));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,rootPath.toAbsolutePath().toString().concat("/newDir"))).setDirectoryListingEnabled(false).addWelcomeFiles("page.html")));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:40:21 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:40:21 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,file=File.createTempFile("undertow","upload",tempFileLocation);
class org.eclipse.jdt.core.dom.Blocktruefile=Files.createTempFile("undertow","upload");
METHOD_INVOCATION
Apr 22, 2021 4:40:23 PM type.change.Infer inferTransformation
INFO: (File.createTempFile(:[11x1],:[11x2],tempFileLocation), Files.createTempFile(:[11x1],:[11x2]))
Apr 22, 2021 4:40:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,if(file.exists())
class org.eclipse.jdt.core.dom.Blocktrueif(Files.exists(file))
METHOD_INVOCATION
Apr 22, 2021 4:40:24 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:40:24 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newFile -> newFile
true,class org.eclipse.jdt.core.dom.Block,while(newFile.exists())
class org.eclipse.jdt.core.dom.Blocktruewhile(Files.exists(newFile))
METHOD_INVOCATION
Apr 22, 2021 4:40:24 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 4:40:24 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,"innerDir")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,"innerDir")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:41:18 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:41:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,rootPath.getAbsolutePath().concat("/otherDir"))).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,rootPath.toAbsolutePath().toString().concat("/otherDir"))).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:42:11 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:42:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: workingDir -> workingDir
true,class org.eclipse.jdt.core.dom.Block,Partition p=pf.createPartition(schemaManager,id,suffix,1000,workingDir);
class org.eclipse.jdt.core.dom.BlocktruePartition p=pf.createPartition(schemaManager,id,suffix,1000,workingDir.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:42:14 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 4:42:14 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,return !canonicalName.equalsIgnoreCase(file.getName());
class org.eclipse.jdt.core.dom.Blocktruereturn !canonicalName.equalsIgnoreCase(file.getFileName().toString());
METHOD_INVOCATION
Apr 22, 2021 4:42:20 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].getFileName())
Apr 22, 2021 4:42:20 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,if(canonicalName.equals(file.getName()))
class org.eclipse.jdt.core.dom.Blocktrueif(canonicalName.equals(file.getFileName().toString()))
METHOD_INVOCATION
Apr 22, 2021 4:42:23 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].getFileName())
Apr 22, 2021 4:42:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,if(file.exists())
class org.eclipse.jdt.core.dom.Blocktrueif(Files.exists(file))
METHOD_INVOCATION
Apr 22, 2021 4:42:24 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:42:24 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directory -> directory
true,class org.eclipse.jdt.core.dom.Block,File logFileName=new File(directory,"server2.log");
class org.eclipse.jdt.core.dom.BlocktruePath logFileName=directory.resolve("server2.log");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:42:25 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:42:25 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760)).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760)).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:43:19 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:43:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logDirectory -> logDirectory
true,class org.eclipse.jdt.core.dom.Block,File directory=logDirectory;
class org.eclipse.jdt.core.dom.BlocktruePath directory=logDirectory;
TYPE
Apr 22, 2021 4:43:19 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 4:43:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logDirectory -> logDirectory
true,class org.eclipse.jdt.core.dom.Block,File directory=logDirectory;
class org.eclipse.jdt.core.dom.BlocktruePath directory=logDirectory;
TYPE
Apr 22, 2021 4:43:19 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 4:43:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logDirectory -> logDirectory
true,class org.eclipse.jdt.core.dom.Block,File directory=logDirectory;
class org.eclipse.jdt.core.dom.BlocktruePath directory=logDirectory;
TYPE
Apr 22, 2021 4:43:19 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 4:43:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logDirectory -> logDirectory
true,class org.eclipse.jdt.core.dom.Block,File logFileName=new File(logDirectory,"server.log");
class org.eclipse.jdt.core.dom.BlocktruePath logFileName=logDirectory.resolve("server.log");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:43:21 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:43:21 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logDirectory -> logDirectory
true,class org.eclipse.jdt.core.dom.Block,File firstLogRotate=new File(logDirectory,"server_" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + ".log");
class org.eclipse.jdt.core.dom.BlocktruePath firstLogRotate=logDirectory.resolve("server_" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + ".log");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:43:27 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 4:43:27 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logDirectory -> logDirectory
true,class org.eclipse.jdt.core.dom.Block,File secondLogRotate=new File(logDirectory,"server_" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "-1.log");
class org.eclipse.jdt.core.dom.BlocktruePath secondLogRotate=logDirectory.resolve("server_" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()) + "-1.log");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:43:34 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 4:43:34 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,"")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,"")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:44:27 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:44:27 PM Utilities.ASTUtils printCodeMappingStuff
INFO: rootPath -> rootPath
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(rootPath,10485760)).setDirectoryListingEnabled(true))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(rootPath,10485760)).setDirectoryListingEnabled(true))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:45:06 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],new ResourceHandler().setResourceManager(new FileResourceManager(rootPath,10485760)).setDirectoryListingEnabled(true)), new :[1]:[3](:[2x1],new ResourceHandler(new PathResourceManager(rootPath,10485760)).setDirectoryListingEnabled(true)))
Apr 22, 2021 4:45:06 PM Utilities.ASTUtils printCodeMappingStuff
INFO: defaultLogFile -> defaultLogFile
true,class org.eclipse.jdt.core.dom.Block,if(initialRun && defaultLogFile.exists())
class org.eclipse.jdt.core.dom.Blocktrueif(initialRun && Files.exists(defaultLogFile))
METHOD_INVOCATION
Apr 22, 2021 4:45:09 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:45:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: defaultLogFile -> defaultLogFile
true,class org.eclipse.jdt.core.dom.Block,if(!defaultLogFile.exists())
class org.eclipse.jdt.core.dom.Blocktrueif(!Files.exists(defaultLogFile))
METHOD_INVOCATION
Apr 22, 2021 4:45:11 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:45:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: newSymlink -> newSymlink
true,class org.eclipse.jdt.core.dom.Block,DefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler().setResourceManager(new FileResourceManager(newSymlink,10485760,true,"")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
class org.eclipse.jdt.core.dom.BlocktrueDefaultServer.setRootHandler(new CanonicalPathHandler().setNext(new PathHandler().addPrefixPath("/path",new ResourceHandler(new PathResourceManager(newSymlink,10485760,true,"")).setDirectoryListingEnabled(false).addWelcomeFiles("page.html"))));
TYPE METHOD_INVOCATION
Apr 22, 2021 4:46:05 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],:[2x2]), new :[1]:[3](:[2x1],:[2x2]))
Apr 22, 2021 4:46:05 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,OLogManager.instance().error(this,"Can not close file " + file.getName());
class org.eclipse.jdt.core.dom.BlocktrueOLogManager.instance().error(this,"Can not close file " + file.getFileName());
METHOD_INVOCATION
Apr 22, 2021 4:46:08 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:46:08 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,OLogManager.instance().error(this,"Can not close file " + file.getName(),ioe);
class org.eclipse.jdt.core.dom.BlocktrueOLogManager.instance().error(this,"Can not close file " + file.getFileName(),ioe);
METHOD_INVOCATION
Apr 22, 2021 4:46:11 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:46:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,OLogManager.instance().warn(this,"WAL file " + file.getName() + " close was interrupted",ie);
class org.eclipse.jdt.core.dom.BlocktrueOLogManager.instance().warn(this,"WAL file " + file.getFileName() + " close was interrupted",ie);
METHOD_INVOCATION
Apr 22, 2021 4:46:15 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:46:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,OLogManager.instance().error(this,"Can not delete file " + file.getName());
class org.eclipse.jdt.core.dom.BlocktrueOLogManager.instance().error(this,"Can not delete file " + file.getFileName());
METHOD_INVOCATION
Apr 22, 2021 4:46:18 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:46:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,OLogManager.instance().error(this,"Can not delete file " + file.getName(),ioe);
class org.eclipse.jdt.core.dom.BlocktrueOLogManager.instance().error(this,"Can not delete file " + file.getFileName(),ioe);
METHOD_INVOCATION
Apr 22, 2021 4:46:21 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:46:21 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,OLogManager.instance().warn(this,"WAL file " + file.getName() + " delete was interrupted",ie);
class org.eclipse.jdt.core.dom.BlocktrueOLogManager.instance().warn(this,"WAL file " + file.getFileName() + " delete was interrupted",ie);
METHOD_INVOCATION
Apr 22, 2021 4:46:25 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:46:25 PM Utilities.ASTUtils printCodeMappingStuff
INFO: osFile -> osFile
true,class org.eclipse.jdt.core.dom.Block,OLogManager.instance().debug(this,"Checking file integrity of " + osFile.getName() + "...");
class org.eclipse.jdt.core.dom.BlocktrueOLogManager.instance().debug(this,"Checking file integrity of " + osFile.getFileName() + "...");
METHOD_INVOCATION
Apr 22, 2021 4:46:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:46:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: osFile -> osFile
true,class org.eclipse.jdt.core.dom.Block,throw new FileNotFoundException(osFile.getAbsolutePath());
class org.eclipse.jdt.core.dom.Blocktruethrow new FileNotFoundException(osFile.toString());
METHOD_INVOCATION
Apr 22, 2021 4:46:30 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:46:30 PM Utilities.ASTUtils printCodeMappingStuff
INFO: osFile -> osFile
true,class org.eclipse.jdt.core.dom.Block,return osFile != null && osFile.exists();
class org.eclipse.jdt.core.dom.Blocktruereturn osFile != null && Files.exists(osFile);
METHOD_INVOCATION
Apr 22, 2021 4:46:32 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:46:32 PM Utilities.ASTUtils printCodeMappingStuff
INFO: osFile -> osFile
true,class org.eclipse.jdt.core.dom.Block,return osFile.getPath();
class org.eclipse.jdt.core.dom.Blocktruereturn osFile.toString();
METHOD_INVOCATION_NAME
Apr 22, 2021 4:46:32 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getPath(), :[9x2].toString())
Apr 22, 2021 4:46:32 PM Utilities.ASTUtils printCodeMappingStuff
INFO: osFile -> osFile
true,class org.eclipse.jdt.core.dom.Block,builder.append(osFile.getName());
class org.eclipse.jdt.core.dom.Blocktruebuilder.append(osFile.getFileName());
METHOD_INVOCATION
Apr 22, 2021 4:46:34 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:46:34 PM Utilities.ASTUtils printCodeMappingStuff
INFO: osFile -> osFile
true,class org.eclipse.jdt.core.dom.Block,OLogManager.instance().error(this,"Error during channel close for file '" + osFile.getAbsolutePath() + "', during IO exception handling",ioe);
class org.eclipse.jdt.core.dom.BlocktrueOLogManager.instance().error(this,"Error during channel close for file '" + osFile + "', during IO exception handling",ioe);
METHOD_INVOCATION
Apr 22, 2021 4:46:36 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2])
Apr 22, 2021 4:46:36 PM Utilities.ASTUtils printCodeMappingStuff
INFO: nameIdMapHolderFile -> nameIdMapHolderPath
true,class org.eclipse.jdt.core.dom.Block,if(nameIdMapHolderFile.exists())
class org.eclipse.jdt.core.dom.Blocktrueif(Files.exists(nameIdMapHolderFile))
METHOD_INVOCATION
Apr 22, 2021 4:46:37 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:46:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> path
true,class org.eclipse.jdt.core.dom.Block,order=extractOrder(file.getName());
class org.eclipse.jdt.core.dom.Blocktrueorder=extractOrder(file.getFileName().toString());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:46:41 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].getFileName())
Apr 22, 2021 4:46:41 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> path
true,class org.eclipse.jdt.core.dom.Block,this.file=Paths.get(file.getAbsolutePath());
class org.eclipse.jdt.core.dom.Blocktruethis.file=file;
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_NAME
Apr 22, 2021 4:46:42 PM type.change.Infer inferTransformation
INFO: (Paths.get(:[35].getAbsolutePath()), :[[35]])
Apr 22, 2021 4:46:42 PM Utilities.ASTUtils printCodeMappingStuff
INFO: walLocation -> walLocation
true,class org.eclipse.jdt.core.dom.Block,walFiles=this.walLocation.listFiles(new SimpleFileNameFilter(storage));
class org.eclipse.jdt.core.dom.BlocktruewalFiles=Files.find(walLocation,1,(Path path,BasicFileAttributes attributes) -> validateName(path.getFileName().toString(),storageName,locale));
METHOD_INVOCATION
Apr 22, 2021 4:46:48 PM type.change.Infer inferTransformation
INFO: (new SimpleFileNameFilter(storage), walLocation)
Apr 22, 2021 4:46:48 PM Utilities.ASTUtils printCodeMappingStuff
INFO: walLocation -> walLocation
true,class org.eclipse.jdt.core.dom.Block,walFiles=this.walLocation.listFiles(new FilenameFilter(storage));
class org.eclipse.jdt.core.dom.BlocktruewalFiles=Files.find(walLocation,1,(Path path,BasicFileAttributes attrs) -> validateSimpleName(path.getFileName().toString(),locale));
METHOD_INVOCATION
Apr 22, 2021 4:46:54 PM type.change.Infer inferTransformation
INFO: (new FilenameFilter(storage), walLocation)
Apr 22, 2021 4:46:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: walLocation -> walLocation
true,class org.eclipse.jdt.core.dom.Block,last=new OLogSegment(this,new File(walLocation,getSegmentName(last.getOrder() + 1)),maxPagesCacheSize,fileTTL,segmentBufferSize,new SubScheduledExecutorService(autoFileCloser),new SubScheduledExecutorService(commitExecutor));
class org.eclipse.jdt.core.dom.Blocktruelast=new OLogSegment(this,walLocation.resolve(getSegmentName(last.getOrder() + 1)),maxPagesCacheSize,fileTTL,segmentBufferSize,new SubScheduledExecutorService(autoFileCloser),new SubScheduledExecutorService(commitExecutor));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:47:08 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:47:08 PM Utilities.ASTUtils printCodeMappingStuff
INFO: walLocation -> walLocation
true,class org.eclipse.jdt.core.dom.Block,last=new OLogSegment(this,new File(walLocation,getSegmentName(lsn.getSegment() + 1)),maxPagesCacheSize,fileTTL,segmentBufferSize,new SubScheduledExecutorService(autoFileCloser),new SubScheduledExecutorService(commitExecutor));
class org.eclipse.jdt.core.dom.Blocktruelast=new OLogSegment(this,walLocation.resolve(getSegmentName(lsn.getSegment() + 1)),maxPagesCacheSize,fileTTL,segmentBufferSize,new SubScheduledExecutorService(autoFileCloser),new SubScheduledExecutorService(commitExecutor));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:47:23 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:47:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: walLocation -> walLocation
true,class org.eclipse.jdt.core.dom.Block,last=new OLogSegment(this,new File(walLocation,getSegmentName(last.getOrder() + 1)),maxPagesCacheSize,fileTTL,segmentBufferSize,new SubScheduledExecutorService(autoFileCloser),new SubScheduledExecutorService(commitExecutor));
class org.eclipse.jdt.core.dom.Blocktruelast=new OLogSegment(this,walLocation.resolve(getSegmentName(last.getOrder() + 1)),maxPagesCacheSize,fileTTL,segmentBufferSize,new SubScheduledExecutorService(autoFileCloser),new SubScheduledExecutorService(commitExecutor));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:47:38 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:47:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: rootDirectory -> statePath
true,class org.eclipse.jdt.core.dom.Block,final File rootDirectory=writeCache.getRootDirectory();
class org.eclipse.jdt.core.dom.Blocktruefinal Path rootDirectory=writeCache.getRootDirectory().resolve(CACHE_STATE_FILE);
TYPE VARIABLE_NAME METHOD_INVOCATION
Apr 22, 2021 4:47:41 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].getRootDirectory())
Apr 22, 2021 4:47:41 PM Utilities.ASTUtils printCodeMappingStuff
INFO: rootDirectory -> rootDirectory
true,class org.eclipse.jdt.core.dom.Block,final File stateFile=new File(rootDirectory,CACHE_STATE_FILE);
class org.eclipse.jdt.core.dom.Blocktruefinal Path stateFile=rootDirectory.resolve(CACHE_STATE_FILE);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:47:43 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:47:43 PM Utilities.ASTUtils printCodeMappingStuff
INFO: rootDirectory -> rootDirectory
true,class org.eclipse.jdt.core.dom.Block,final File stateFile=new File(rootDirectory,CACHE_STATE_FILE);
class org.eclipse.jdt.core.dom.Blocktruefinal Path stateFile=rootDirectory.resolve(CACHE_STATE_FILE);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:47:45 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:47:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: verifiedIndexDir -> verifiedIndexDir
true,class org.eclipse.jdt.core.dom.Block,verifiedIndexDir=dir.toFile();
class org.eclipse.jdt.core.dom.BlocktrueverifiedIndexDir=DirectoryHelper.getVerifiedIndexPath(directoryProviderName,properties,true);
METHOD_INVOCATION
Apr 22, 2021 4:47:47 PM type.change.Infer inferTransformation
INFO: (dir.toFile(), DirectoryHelper.getVerifiedIndexPath(directoryProviderName,properties,true))
Apr 22, 2021 4:47:47 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> folder
true,class org.eclipse.jdt.core.dom.Block,sb.append(file.getName());
class org.eclipse.jdt.core.dom.Blocktruesb.append(file.getFileName().toString());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:47:50 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].getFileName())
Apr 22, 2021 4:47:50 PM Utilities.ASTUtils printCodeMappingStuff
INFO: folder -> file
true,class org.eclipse.jdt.core.dom.Block,sb.append(folder.getName());
class org.eclipse.jdt.core.dom.Blocktruesb.append(folder.getFileName().toString());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:47:53 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].getFileName())
Apr 22, 2021 4:47:53 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,if(file != null && file.canWrite())
class org.eclipse.jdt.core.dom.Blocktrueif(file != null && Files.isWritable(file))
METHOD_INVOCATION
Apr 22, 2021 4:47:54 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].canWrite(), Files.isWritable(:[9x2]))
Apr 22, 2021 4:47:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logFile -> logFile
true,class org.eclipse.jdt.core.dom.Block,final DropwizardTestSupport<Configuration> app=new DropwizardTestSupport<>(BadLogApp.class,configPath,ConfigOverride.config("logging.appenders[0].currentLogFilename",logFile.getAbsolutePath()));
class org.eclipse.jdt.core.dom.Blocktruefinal DropwizardTestSupport<Configuration> app=new DropwizardTestSupport<>(BadLogApp.class,configPath,ConfigOverride.config("logging.appenders[0].currentLogFilename",logFile.toString()));
METHOD_INVOCATION
Apr 22, 2021 4:48:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:48:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: logFile -> logFile
true,class org.eclipse.jdt.core.dom.Block,final DropwizardTestSupport<Configuration> app3=new DropwizardTestSupport<>(BadLogApp.class,configPath,ConfigOverride.config("logging.appenders[0].currentLogFilename",logFile.getAbsolutePath()));
class org.eclipse.jdt.core.dom.Blocktruefinal DropwizardTestSupport<Configuration> app3=new DropwizardTestSupport<>(BadLogApp.class,configPath,ConfigOverride.config("logging.appenders[0].currentLogFilename",logFile.toString()));
METHOD_INVOCATION
Apr 22, 2021 4:48:07 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:48:07 PM Utilities.ASTUtils printCodeMappingStuff
INFO: example -> example
true,class org.eclipse.jdt.core.dom.Block,writer.write("__" + example.getName() + "__\n\n");
class org.eclipse.jdt.core.dom.Blocktruewriter.write("__" + example.getFileName() + "__\n\n");
METHOD_INVOCATION
Apr 22, 2021 4:48:10 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getName(), :[9x2].getFileName())
Apr 22, 2021 4:48:10 PM Utilities.ASTUtils printCodeMappingStuff
INFO: exampleDirBase -> exampleDirBase
true,class org.eclipse.jdt.core.dom.Block,BugPatternFileGenerator generator=new BugPatternFileGenerator(wikiDir,exampleDirBase,true,true);
class org.eclipse.jdt.core.dom.BlocktrueBugPatternFileGenerator generator=new BugPatternFileGenerator(wikiDir,exampleDirBase,explanationDirBase,true,true);
ADD_VARIABLE
Apr 22, 2021 4:48:12 PM type.change.Infer inferTransformation
INFO: (new :[[1]](:[2x1],:[2x2],:[2x3]), new :[1](:[2x1],:[2x2],explanationDirBase,:[2x3]))
Apr 22, 2021 4:48:12 PM Utilities.ASTUtils printCodeMappingStuff
INFO: exampleDirBase -> exampleDirBase
true,class org.eclipse.jdt.core.dom.Block,BugPatternFileGenerator generator=new BugPatternFileGenerator(wikiDir,exampleDirBase,false,false);
class org.eclipse.jdt.core.dom.BlocktrueBugPatternFileGenerator generator=new BugPatternFileGenerator(wikiDir,exampleDirBase,explanationDirBase,false,false);
ADD_VARIABLE
Apr 22, 2021 4:48:14 PM type.change.Infer inferTransformation
INFO: (new :[[1]](:[2x1],:[2x2],:[2x3]), new :[1](:[2x1],:[2x2],explanationDirBase,:[2x3]))
Apr 22, 2021 4:48:14 PM Utilities.ASTUtils printCodeMappingStuff
INFO: exampleDirBase -> exampleDirBase
true,class org.eclipse.jdt.core.dom.Block,File exampleDir=new File(exampleDirBase,path);
class org.eclipse.jdt.core.dom.BlocktruePath exampleDir=exampleDirBase.resolve(path);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:48:15 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:48:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: wikiDir -> wikiDir
true,class org.eclipse.jdt.core.dom.Block,BugPatternFileGenerator generator=new BugPatternFileGenerator(wikiDir,exampleDirBase,true,true);
class org.eclipse.jdt.core.dom.BlocktrueBugPatternFileGenerator generator=new BugPatternFileGenerator(wikiDir,exampleDirBase,explanationDirBase,true,true);
ADD_VARIABLE
Apr 22, 2021 4:48:17 PM type.change.Infer inferTransformation
INFO: (new :[[1]](:[2x1],:[2x2],:[2x3]), new :[1](:[2x1],:[2x2],explanationDirBase,:[2x3]))
Apr 22, 2021 4:48:17 PM Utilities.ASTUtils printCodeMappingStuff
INFO: wikiDir -> wikiDir
true,class org.eclipse.jdt.core.dom.Block,String actual=CharStreams.toString(Files.newReader(new File(wikiDir,"DeadException.md"),StandardCharsets.UTF_8));
class org.eclipse.jdt.core.dom.BlocktrueString actual=CharStreams.toString(Files.newBufferedReader(wikiDir.resolve("DeadException.md"),UTF_8));
METHOD_INVOCATION
Apr 22, 2021 4:48:24 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:48:24 PM Utilities.ASTUtils printCodeMappingStuff
INFO: wikiDir -> wikiDir
true,class org.eclipse.jdt.core.dom.Block,BugPatternFileGenerator generator=new BugPatternFileGenerator(wikiDir,exampleDirBase,false,false);
class org.eclipse.jdt.core.dom.BlocktrueBugPatternFileGenerator generator=new BugPatternFileGenerator(wikiDir,exampleDirBase,explanationDirBase,false,false);
ADD_VARIABLE
Apr 22, 2021 4:48:26 PM type.change.Infer inferTransformation
INFO: (new :[[1]](:[2x1],:[2x2],:[2x3]), new :[1](:[2x1],:[2x2],explanationDirBase,:[2x3]))
Apr 22, 2021 4:48:26 PM Utilities.ASTUtils printCodeMappingStuff
INFO: exampleDir -> exampleDir
true,class org.eclipse.jdt.core.dom.Block,if(!exampleDir.exists())
class org.eclipse.jdt.core.dom.Blocktrueif(!Files.exists(exampleDir))
METHOD_INVOCATION
Apr 22, 2021 4:48:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:48:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: bugpatternDir -> bugpatternDir
true,class org.eclipse.jdt.core.dom.Block,BugPatternFileGenerator generator=new BugPatternFileGenerator(bugpatternDir,exampleDirBase,options.generateFrontMatter,options.usePygments);
class org.eclipse.jdt.core.dom.BlocktrueBugPatternFileGenerator generator=new BugPatternFileGenerator(bugpatternDir,exampleDirBase,explanationDir,options.generateFrontMatter,options.usePygments);
ADD_VARIABLE
Apr 22, 2021 4:48:33 PM type.change.Infer inferTransformation
INFO: (new :[[1]](:[2x1],:[2x2],:[2x3]), new :[1](:[2x1],:[2x2],explanationDir,:[2x3]))
Apr 22, 2021 4:48:33 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,if(!file.canRead())
class org.eclipse.jdt.core.dom.Blocktrueif(!Files.isReadable(file))
METHOD_INVOCATION
Apr 22, 2021 4:48:35 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].canRead(), Files.isReadable(:[9x2]))
Apr 22, 2021 4:48:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,if(!file.exists())
class org.eclipse.jdt.core.dom.Blocktrueif(!Files.exists(file))
METHOD_INVOCATION
Apr 22, 2021 4:48:37 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 4:48:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: f -> f
true,class org.eclipse.jdt.core.dom.Block,CompilationUnit cu=new JavaParser(parserConfiguration).parse(ParseStart.COMPILATION_UNIT,new StreamProvider(new FileInputStream(f))).getResult().get();
class org.eclipse.jdt.core.dom.BlocktrueCompilationUnit cu=new JavaParser(parserConfiguration).parse(ParseStart.COMPILATION_UNIT,provider(f)).getResult().get();
METHOD_INVOCATION
Apr 22, 2021 4:49:01 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],new StreamProvider(new FileInputStream(f))), new :[1]:[3](:[2x1],provider(f)))
Apr 22, 2021 4:49:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,byte[] encoded=Files.readAllBytes(Paths.get(file.getAbsolutePath()));
class org.eclipse.jdt.core.dom.Blocktruebyte[] encoded=Files.readAllBytes(file);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:49:03 PM type.change.Infer inferTransformation
INFO: (Paths.get(:[35].getAbsolutePath()), :[[35]])
Apr 22, 2021 4:49:03 PM Utilities.ASTUtils printCodeMappingStuff
INFO: f -> f
true,class org.eclipse.jdt.core.dom.Block,return new JavaParser(parserConfiguration).parse(ParseStart.COMPILATION_UNIT,new StreamProvider(new FileInputStream(f))).getResult().get();
class org.eclipse.jdt.core.dom.Blocktruereturn new JavaParser(parserConfiguration).parse(ParseStart.COMPILATION_UNIT,provider(f)).getResult().get();
METHOD_INVOCATION
Apr 22, 2021 4:49:26 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],new StreamProvider(new FileInputStream(f))), new :[1]:[3](:[2x1],provider(f)))
Apr 22, 2021 4:49:26 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,byte[] encoded=Files.readAllBytes(Paths.get(file.getAbsolutePath()));
class org.eclipse.jdt.core.dom.Blocktruebyte[] encoded=Files.readAllBytes(file);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:49:28 PM type.change.Infer inferTransformation
INFO: (Paths.get(:[35].getAbsolutePath()), :[[35]])
Apr 22, 2021 4:49:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: f -> f
true,class org.eclipse.jdt.core.dom.Block,CompilationUnit cu=new JavaParser(parserConfiguration).parse(ParseStart.COMPILATION_UNIT,new StreamProvider(new FileInputStream(f))).getResult().get();
class org.eclipse.jdt.core.dom.BlocktrueCompilationUnit cu=new JavaParser(parserConfiguration).parse(ParseStart.COMPILATION_UNIT,provider(f)).getResult().get();
METHOD_INVOCATION
Apr 22, 2021 4:49:52 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](:[2x1],new StreamProvider(new FileInputStream(f))), new :[1]:[3](:[2x1],provider(f)))
Apr 22, 2021 4:49:52 PM Utilities.ASTUtils printCodeMappingStuff
INFO: srcFile -> srcFile
true,class org.eclipse.jdt.core.dom.Block,return parsedFiles.get(srcFile.getAbsolutePath(),() -> {  try {    if (!srcFile.exists()) {      return Optional.empty();    }    return javaParser.parse(COMPILATION_UNIT,provider(srcFile)).getResult().map(cu -> cu.setStorage(srcFile.toPath()));  } catch (  FileNotFoundException e) {    throw new RuntimeException("Issue while parsing while type solving: " + srcFile.getAbsolutePath(),e);  }});
class org.eclipse.jdt.core.dom.Blocktruereturn parsedFiles.get(srcFile.toAbsolutePath(),() -> {  try {    if (!Files.exists(srcFile)) {      return Optional.empty();    }    return javaParser.parse(COMPILATION_UNIT,provider(srcFile)).getResult().map(cu -> cu.setStorage(srcFile));  } catch (  FileNotFoundException e) {    throw new RuntimeException("Issue while parsing while type solving: " + srcFile.toAbsolutePath(),e);  }});
METHOD_INVOCATION METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:49:52 PM type.change.Infer inferTransformation
INFO: TOO LARGE!!!
Apr 22, 2021 4:49:52 PM Utilities.ASTUtils printCodeMappingStuff
INFO: srcDir -> srcDir
true,class org.eclipse.jdt.core.dom.Block,StringBuilder filePath=new StringBuilder(srcDir.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueStringBuilder filePath=new StringBuilder(srcDir.toAbsolutePath().toString());
METHOD_INVOCATION
Apr 22, 2021 4:49:55 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 4:49:55 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,CompilationUnit unit=javaParser.parse(ParseStart.COMPILATION_UNIT,new StreamProvider(new FileInputStream(file))).getResult().get();
class org.eclipse.jdt.core.dom.BlocktrueCompilationUnit unit=javaParser.parse(ParseStart.COMPILATION_UNIT,new StreamProvider(Files.newInputStream(file))).getResult().get();
METHOD_INVOCATION
Apr 22, 2021 4:50:33 PM type.change.Infer inferTransformation
INFO: (new FileInputStream(:[2]), Files.newInputStream(:[2]))
Apr 22, 2021 4:50:33 PM Utilities.ASTUtils printCodeMappingStuff
INFO: reportsDir -> reportsDir
true,class org.eclipse.jdt.core.dom.Block,Files.createDirectories(reportsDir.toPath());
class org.eclipse.jdt.core.dom.BlocktrueFiles.createDirectories(reportsDir);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:50:35 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:50:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: reportsDir -> reportsDir
true,class org.eclipse.jdt.core.dom.Block,File xmlFile=new File(reportsDir,"TEST-" + testIdentifier.getUniqueId() + ".xml");
class org.eclipse.jdt.core.dom.BlocktruePath xmlFile=reportsDir.resolve("TEST-" + testIdentifier.getUniqueId() + ".xml");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:50:38 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:50:38 PM Utilities.ASTUtils printCodeMappingStuff
INFO: classFile -> classFile
true,class org.eclipse.jdt.core.dom.Block,logWarning(ex,() -> format("The java.lang.Class loaded from file [%s] has a malformed class name [%s].",classFile.getAbsolutePath(),clazz.get().getName()));
class org.eclipse.jdt.core.dom.BlocktruelogWarning(ex,() -> format("The java.lang.Class loaded from path [%s] has a malformed class name [%s].",classFile.toAbsolutePath(),clazz.get().getName()));
METHOD_INVOCATION
Apr 22, 2021 4:50:46 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toAbsolutePath())
Apr 22, 2021 4:50:46 PM Utilities.ASTUtils printCodeMappingStuff
INFO: classFile -> classFile
true,class org.eclipse.jdt.core.dom.Block,logWarning(ex,() -> format("The java.lang.Class loaded from file [%s] has a malformed class name.",classFile.getAbsolutePath()));
class org.eclipse.jdt.core.dom.BlocktruelogWarning(ex,() -> format("The java.lang.Class loaded from path [%s] has a malformed class name.",classFile.toAbsolutePath()));
METHOD_INVOCATION
Apr 22, 2021 4:50:50 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toAbsolutePath())
Apr 22, 2021 4:50:50 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> path
true,class org.eclipse.jdt.core.dom.Block,return !"package-info.class".equals(file.getName());
class org.eclipse.jdt.core.dom.Blocktruereturn !file.endsWith("package-info.class");
METHOD_INVOCATION
Apr 22, 2021 4:50:54 PM type.change.Infer inferTransformation
INFO: (:[9].equals(:[9x2].getName()), :[[9x2]].endsWith(:[9]))
Apr 22, 2021 4:50:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: root -> root
true,class org.eclipse.jdt.core.dom.Block,Preconditions.condition(root.isDirectory(),() -> "root must be an existing directory: " + root.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktruePreconditions.condition(Files.isDirectory(root),() -> "root must be an existing directory: " + root.toAbsolutePath());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:51:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].isDirectory(), Files.isDirectory(:[9x2]))
Apr 22, 2021 4:51:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toAbsolutePath())
Apr 22, 2021 4:51:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: classFile -> classFile
true,class org.eclipse.jdt.core.dom.Block,logWarning(throwable,() -> format("Failed to load java.lang.Class for file [%s] during classpath scanning.",classFile.getAbsolutePath()));
class org.eclipse.jdt.core.dom.BlocktruelogWarning(throwable,() -> format("Failed to load java.lang.Class for path [%s] during classpath scanning.",classFile.toAbsolutePath()));
METHOD_INVOCATION
Apr 22, 2021 4:51:05 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toAbsolutePath())
Apr 22, 2021 4:51:05 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> path
true,class org.eclipse.jdt.core.dom.Block,return file.isFile() && file.getName().endsWith(CLASS_FILE_SUFFIX);
class org.eclipse.jdt.core.dom.Blocktruereturn Files.isRegularFile(file) && file.getFileName().toString().endsWith(CLASS_FILE_SUFFIX);
METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:51:15 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].isFile(), Files.isRegularFile(:[9x2]))
Apr 22, 2021 4:51:15 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].getFileName())
Apr 22, 2021 4:51:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: getAllClasspathRootDirectories -> getAllClasspathRootDirectories
true,class org.eclipse.jdt.core.dom.Block,return Arrays.stream(fullClassPath.split(File.pathSeparator)).filter(part -> !part.endsWith(".jar")).map(File::new).filter(File::isDirectory).collect(toSet());
class org.eclipse.jdt.core.dom.Blocktruereturn Arrays.stream(fullClassPath.split(File.pathSeparator)).map(Paths::get).filter(Files::isDirectory).collect(toSet());
METHOD_INVOCATION
Apr 22, 2021 4:51:34 PM type.change.Infer inferTransformation
INFO: (:[35].stream(fullClassPath.split(File.pathSeparator)), :[[35]])
Apr 22, 2021 4:51:34 PM type.change.Infer inferTransformation
INFO: (part -> !part.endsWith(:[11]), fullClassPath.split(File.pathSeparator))
Apr 22, 2021 4:51:34 PM Utilities.ASTUtils printCodeMappingStuff
INFO: determineClasspathRootDirectories -> determineClasspathRootDirectories
true,class org.eclipse.jdt.core.dom.Block,return options.getArguments().stream().map(File::new).collect(toCollection(LinkedHashSet::new));
class org.eclipse.jdt.core.dom.Blocktruereturn options.getArguments().stream().map(Paths::get).collect(toCollection(LinkedHashSet::new));
METHOD_INVOCATION
Apr 22, 2021 4:51:41 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 4:51:41 PM Utilities.ASTUtils printCodeMappingStuff
INFO: additionalClasspathEntries -> additionalClasspathEntries
true,class org.eclipse.jdt.core.dom.Block,this.additionalClasspathEntries=new ArrayList<File>(additionalClasspathEntries);
class org.eclipse.jdt.core.dom.Blocktruethis.additionalClasspathEntries=new ArrayList<>(additionalClasspathEntries);
TYPE
Apr 22, 2021 4:51:44 PM type.change.Infer inferTransformation
INFO: (new :[[1]]<File>(:[2]), new :[1]<>(:[2]))
Apr 22, 2021 4:51:44 PM Utilities.ASTUtils printCodeMappingStuff
INFO: reportsDir -> reportsDir
true,class org.eclipse.jdt.core.dom.Block,reportsDir=parser.accepts("reports-dir","Enable report output into a specified local directory (will be created if it does not exist).").withRequiredArg().ofType(File.class);
class org.eclipse.jdt.core.dom.BlocktruereportsDir=parser.accepts("reports-dir","Enable report output into a specified local directory (will be created if it does not exist).").withRequiredArg().withValuesConvertedBy(new PathConverter());
METHOD_INVOCATION
Apr 22, 2021 4:51:48 PM type.change.Infer inferTransformation
INFO: (:[27]:[28]:[29x2c~\s*]=:[30], :[27]:[28]:[29x2c~\s*]=:[30])
Apr 22, 2021 4:51:48 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directories -> directories
true,class org.eclipse.jdt.core.dom.Block,return directories.stream().filter(File::isDirectory).map(File::toURI).map(ClasspathRootSelector::new).collect(toList());
class org.eclipse.jdt.core.dom.Blocktruereturn directories.stream().filter(Files::isDirectory).map(Path::toUri).map(ClasspathRootSelector::new).collect(toList());
METHOD_INVOCATION
Apr 22, 2021 4:52:05 PM type.change.Infer inferTransformation
INFO: (:[[9x3]].stream(:[9x5]).filter(File::isDirectory), :[9x3].stream(:[9x5]).filter(Files::isDirectory))
Apr 22, 2021 4:52:05 PM Utilities.ASTUtils printCodeMappingStuff
INFO: additionalClasspathEntries -> additionalClasspathEntries
true,class org.eclipse.jdt.core.dom.Block,additionalClasspathEntries=parser.acceptsAll(asList("cp","classpath","class-path"),"Provide additional classpath entries -- for example, for adding engines and their dependencies. " + "This option can be repeated.").withRequiredArg().ofType(File.class).withValuesSeparatedBy(File.pathSeparatorChar).describedAs("path1" + File.pathSeparator + "path2"+ File.pathSeparator+ "...");
class org.eclipse.jdt.core.dom.BlocktrueadditionalClasspathEntries=parser.acceptsAll(asList("cp","classpath","class-path"),"Provide additional classpath entries -- for example, for adding engines and their dependencies. " + "This option can be repeated.").withRequiredArg().withValuesConvertedBy(new PathConverter()).withValuesSeparatedBy(File.pathSeparatorChar).describedAs("path1" + File.pathSeparator + "path2"+ File.pathSeparator+ "...");
METHOD_INVOCATION
Apr 22, 2021 4:52:29 PM type.change.Infer inferTransformation
INFO: (:[27]:[28]:[29x2c~\s*]=:[30], :[27]:[28]:[29x2c~\s*]=:[30])
Apr 22, 2021 4:52:29 PM Utilities.ASTUtils printCodeMappingStuff
INFO: subdir -> subdir
true,class org.eclipse.jdt.core.dom.Block,FS.ensureDirExists(subdir);
class org.eclipse.jdt.core.dom.BlocktrueFS.ensureDirExists(subdir.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:52:30 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 4:52:30 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:52:33 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:52:33 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",common.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",common.toString(),"${jetty.home}");
METHOD_INVOCATION
Apr 22, 2021 4:52:36 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:52:36 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homePath -> homePath
true,class org.eclipse.jdt.core.dom.Block,assertThat("jetty.home",baseHome.getHome(),is(homePath.getAbsolutePath()));
class org.eclipse.jdt.core.dom.BlocktrueassertThat("jetty.home",baseHome.getHome(),is(homePath.toString()));
METHOD_INVOCATION
Apr 22, 2021 4:52:39 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:52:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homePath -> homePath
true,class org.eclipse.jdt.core.dom.Block,assertThat("jetty.base",baseHome.getBase(),is(homePath.getAbsolutePath()));
class org.eclipse.jdt.core.dom.BlocktrueassertThat("jetty.base",baseHome.getBase(),is(homePath.toString()));
METHOD_INVOCATION
Apr 22, 2021 4:52:42 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:52:42 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homePath -> homePath
true,class org.eclipse.jdt.core.dom.Block,assertThat("jetty.home",baseHome.getHome(),is(homePath.getAbsolutePath()));
class org.eclipse.jdt.core.dom.BlocktrueassertThat("jetty.home",baseHome.getHome(),is(homePath.toString()));
METHOD_INVOCATION
Apr 22, 2021 4:52:45 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:52:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homePath -> homePath
true,class org.eclipse.jdt.core.dom.Block,assertThat("jetty.base",baseHome.getBase(),is(homePath.getAbsolutePath()));
class org.eclipse.jdt.core.dom.BlocktrueassertThat("jetty.base",baseHome.getBase(),is(homePath.toString()));
METHOD_INVOCATION
Apr 22, 2021 4:52:48 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:52:48 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homePath -> homePath
true,class org.eclipse.jdt.core.dom.Block,assertThat("jetty.home",baseHome.getHome(),is(homePath.getAbsolutePath()));
class org.eclipse.jdt.core.dom.BlocktrueassertThat("jetty.home",baseHome.getHome(),is(homePath.toString()));
METHOD_INVOCATION
Apr 22, 2021 4:52:51 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:52:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homePath -> homePath
true,class org.eclipse.jdt.core.dom.Block,assertThat("jetty.base",baseHome.getBase(),is(homePath.getAbsolutePath()));
class org.eclipse.jdt.core.dom.BlocktrueassertThat("jetty.base",baseHome.getBase(),is(homePath.toString()));
METHOD_INVOCATION
Apr 22, 2021 4:52:55 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:52:55 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:52:58 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:52:58 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:53:02 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:02 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","my.corp=" + corp.getAbsolutePath(),"--include-jetty-dir=${my.corp}","jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","my.corp=" + corp.toString(),"--include-jetty-dir=${my.corp}","jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:53:05 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:05 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","my.common=" + common.getAbsolutePath(),"--include-jetty-dir=${my.common}");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","my.common=" + common.toString(),"--include-jetty-dir=${my.common}");
METHOD_INVOCATION
Apr 22, 2021 4:53:09 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: basePath -> basePath
true,class org.eclipse.jdt.core.dom.Block,cmds.add("-Djetty.base=" + basePath.getAbsolutePath());
class org.eclipse.jdt.core.dom.Blocktruecmds.add("-Djetty.base=" + basePath.toString());
METHOD_INVOCATION
Apr 22, 2021 4:53:12 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:12 PM Utilities.ASTUtils printCodeMappingStuff
INFO: devops -> devops
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"--include-jetty-dir=" + devops.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"--include-jetty-dir=" + devops.toString());
METHOD_INVOCATION
Apr 22, 2021 4:53:15 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: devops -> devops
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(devops.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(devops.toString());
METHOD_INVOCATION
Apr 22, 2021 4:53:18 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: dir -> dir
true,class org.eclipse.jdt.core.dom.Block,File outputFile=new File(dir,OS.separators(relFilePath));
class org.eclipse.jdt.core.dom.BlocktruePath outputFile=dir.resolve(OS.separators(relFilePath));
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:53:19 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:53:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:53:22 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:22 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:53:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","my.corp=" + corp.getAbsolutePath(),"--include-jetty-dir=${my.corp}","jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","my.corp=" + corp.toString(),"--include-jetty-dir=${my.corp}","jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:53:31 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:31 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","my.corp=" + corp.getAbsolutePath(),"--include-jetty-dir=${my.corp}","jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","my.corp=" + corp.toString(),"--include-jetty-dir=${my.corp}","jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:53:35 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","my.common=" + common.getAbsolutePath(),"--include-jetty-dir=${my.common}");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","my.common=" + common.toString(),"--include-jetty-dir=${my.common}");
METHOD_INVOCATION
Apr 22, 2021 4:53:38 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:38 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:53:42 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:53:42 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(corp,"start.ini","jetty.http.port=9090","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(corp,"start.ini","jetty.http.port=9090","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:53:45 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","jetty.http.port=8080","--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","jetty.http.port=8080","--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION
Apr 22, 2021 4:53:49 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:49 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:53:52 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:52 PM Utilities.ASTUtils printCodeMappingStuff
INFO: opt -> opt
true,class org.eclipse.jdt.core.dom.Block,File common=new File(opt,"common");
class org.eclipse.jdt.core.dom.BlocktruePath common=opt.resolve("common");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:53:54 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:53:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:53:57 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:53:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:54:00 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:00 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:54:06 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:06 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:06 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:54:09 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:54:11 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:54:15 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(corp.toString());
METHOD_INVOCATION
Apr 22, 2021 4:54:17 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:17 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:54:20 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:20 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:54:24 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:54:24 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.opt=" + opt.getAbsolutePath(),"--include-jetty-dir=" + dirRef);
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.opt=" + opt.toString(),"--include-jetty-dir=" + dirRef);
METHOD_INVOCATION
Apr 22, 2021 4:54:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:54:31 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:54:31 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.common=" + common.getAbsolutePath(),"--include-jetty-dir=${my.common}");
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.common=" + common.toString(),"--include-jetty-dir=${my.common}");
METHOD_INVOCATION
Apr 22, 2021 4:54:35 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:54:38 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:38 PM Utilities.ASTUtils printCodeMappingStuff
INFO: basePath -> basePath
true,class org.eclipse.jdt.core.dom.Block,File file=new File(basePath,OS.separators(name));
class org.eclipse.jdt.core.dom.BlocktruePath file=basePath.resolve(OS.separators(name));
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:54:39 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:54:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath(),"--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString(),"--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:54:47 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:47 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:47 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:54:52 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:52 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:52 PM Utilities.ASTUtils printCodeMappingStuff
INFO: opt -> opt
true,class org.eclipse.jdt.core.dom.Block,File common=new File(opt,"common");
class org.eclipse.jdt.core.dom.BlocktruePath common=opt.resolve("common");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:54:54 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:54:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: opt -> opt
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.opt=" + opt.getAbsolutePath(),"my.dir=common","--include-jetty-dir=" + dirRef);
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.opt=" + opt.toString(),"my.dir=common","--include-jetty-dir=" + dirRef);
METHOD_INVOCATION
Apr 22, 2021 4:54:57 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:54:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:55:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",common.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",common.toString(),"${jetty.home}");
METHOD_INVOCATION
Apr 22, 2021 4:55:03 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:03 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homeDir -> homeDir
true,class org.eclipse.jdt.core.dom.Block,config.add(new JettyHomeConfigSource(homeDir.toPath()));
class org.eclipse.jdt.core.dom.Blocktrueconfig.add(new JettyHomeConfigSource(homeDir));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:55:07 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:55:07 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:55:11 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:55:15 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:55:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:55:18 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"--include-jetty-dir=" + devops.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"--include-jetty-dir=" + devops.toString());
METHOD_INVOCATION
Apr 22, 2021 4:55:21 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:21 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath(),"--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString(),"--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:55:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:55:31 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:31 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:55:34 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:55:34 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,cmdLine.add("jetty.base=" + baseDir.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktruecmdLine.add("jetty.base=" + baseDir.toString());
METHOD_INVOCATION
Apr 22, 2021 4:55:37 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath(),"--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString(),"--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:55:45 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:45 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(corp.toString());
METHOD_INVOCATION
Apr 22, 2021 4:55:47 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:47 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:55:51 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:55:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:55:54 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:55:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:55:57 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:55:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","my.common=" + common.getAbsolutePath(),"--include-jetty-dir=${my.common}");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","my.common=" + common.toString(),"--include-jetty-dir=${my.common}");
METHOD_INVOCATION
Apr 22, 2021 4:56:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:56:04 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:04 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:07 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:07 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:10 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:10 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:56:13 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:56:13 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:56:17 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:56:17 PM Utilities.ASTUtils printCodeMappingStuff
INFO: destDir -> destDir
true,class org.eclipse.jdt.core.dom.Block,IO.copyDir(srcDir,destDir);
class org.eclipse.jdt.core.dom.BlocktrueIO.copyDir(srcDir,destDir.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:56:18 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 4:56:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(corp,"start.ini","jetty.http.port=9090","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(corp,"start.ini","jetty.http.port=9090","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:21 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:21 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","jetty.http.port=8080","--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","jetty.http.port=8080","--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:25 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:25 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,config.add(new JettyBaseConfigSource(baseDir.toPath()));
class org.eclipse.jdt.core.dom.Blocktrueconfig.add(new JettyBaseConfigSource(baseDir));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:56:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:56:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.opt=" + opt.getAbsolutePath(),"--include-jetty-dir=" + dirRef);
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.opt=" + opt.toString(),"--include-jetty-dir=" + dirRef);
METHOD_INVOCATION
Apr 22, 2021 4:56:32 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:32 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"--include-jetty-dir=" + devops.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"--include-jetty-dir=" + devops.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:35 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(corp,"start.ini","jetty.http.port=9090","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(corp,"start.ini","jetty.http.port=9090","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:38 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:38 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","jetty.http.port=8080","--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","jetty.http.port=8080","--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:41 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:41 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:45 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:56:48 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:48 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:56:51 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",devops.getAbsolutePath(),common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",devops.toString(),common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:56:58 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:58 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:58 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:56:58 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:57:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(corp.toString());
METHOD_INVOCATION
Apr 22, 2021 4:57:03 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:03 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:57:06 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:06 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.common=" + common.getAbsolutePath(),"--include-jetty-dir=${my.common}");
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.common=" + common.toString(),"--include-jetty-dir=${my.common}");
METHOD_INVOCATION
Apr 22, 2021 4:57:09 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:57:13 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:57:13 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","my.corp=" + corp.getAbsolutePath(),"--include-jetty-dir=${my.corp}","jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","my.corp=" + corp.toString(),"--include-jetty-dir=${my.corp}","jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:57:16 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homeDir -> homeDir
true,class org.eclipse.jdt.core.dom.Block,cmdLine.add("jetty.home=" + homeDir.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktruecmdLine.add("jetty.home=" + homeDir.toString());
METHOD_INVOCATION
Apr 22, 2021 4:57:19 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:57:23 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:57:26 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:26 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:57:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:57:31 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:31 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:57:34 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:34 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.opt=" + opt.getAbsolutePath(),"my.dir=common","--include-jetty-dir=" + dirRef);
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.opt=" + opt.toString(),"my.dir=common","--include-jetty-dir=" + dirRef);
METHOD_INVOCATION
Apr 22, 2021 4:57:37 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,FS.exists(file.toPath());
class org.eclipse.jdt.core.dom.BlocktrueFS.exists(file);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:57:39 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:57:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,return IO.readToString(file);
class org.eclipse.jdt.core.dom.Blocktruereturn IO.readToString(file.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:57:40 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 4:57:40 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:57:44 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:57:44 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:57:47 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:47 PM Utilities.ASTUtils printCodeMappingStuff
INFO: opt -> opt
true,class org.eclipse.jdt.core.dom.Block,File common=new File(opt,"common");
class org.eclipse.jdt.core.dom.BlocktruePath common=opt.resolve("common");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 4:57:48 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 4:57:48 PM Utilities.ASTUtils printCodeMappingStuff
INFO: opt -> opt
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.opt=" + opt.getAbsolutePath(),"--include-jetty-dir=" + dirRef);
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.opt=" + opt.toString(),"--include-jetty-dir=" + dirRef);
METHOD_INVOCATION
Apr 22, 2021 4:57:52 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:52 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.opt=" + opt.getAbsolutePath(),"my.dir=common","--include-jetty-dir=" + dirRef);
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.opt=" + opt.toString(),"my.dir=common","--include-jetty-dir=" + dirRef);
METHOD_INVOCATION
Apr 22, 2021 4:57:56 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:56 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:57:59 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:57:59 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:58:05 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:58:05 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:58:05 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,config.add(new JettyBaseConfigSource(baseDir.toPath()));
class org.eclipse.jdt.core.dom.Blocktrueconfig.add(new JettyBaseConfigSource(baseDir));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:09 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:58:13 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:58:13 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:17 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:17 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:20 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:20 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homeDir -> homeDir
true,class org.eclipse.jdt.core.dom.Block,config.add(new JettyHomeConfigSource(homeDir.toPath()));
class org.eclipse.jdt.core.dom.Blocktrueconfig.add(new JettyHomeConfigSource(homeDir));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:24 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:24 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:58:28 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:58:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:32 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:32 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:35 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath(),"--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString(),"--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:58:43 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:58:43 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:58:43 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:47 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:47 PM Utilities.ASTUtils printCodeMappingStuff
INFO: path -> path
true,class org.eclipse.jdt.core.dom.Block,expectedList.add(path.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedList.add(path.toRealPath().toString());
METHOD_INVOCATION
Apr 22, 2021 4:58:51 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toRealPath())
Apr 22, 2021 4:58:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homeDir -> homeDir
true,class org.eclipse.jdt.core.dom.Block,config.add(new JettyHomeConfigSource(homeDir.toPath()));
class org.eclipse.jdt.core.dom.Blocktrueconfig.add(new JettyHomeConfigSource(homeDir));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:55 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:55 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homeDir -> homeDir
true,class org.eclipse.jdt.core.dom.Block,config.add(new JettyBaseConfigSource(homeDir.toPath()));
class org.eclipse.jdt.core.dom.Blocktrueconfig.add(new JettyBaseConfigSource(homeDir));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:58:58 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:58:58 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,MainResult result=runMain(base,home,"my.common=" + common.getAbsolutePath(),"--include-jetty-dir=${my.common}");
class org.eclipse.jdt.core.dom.BlocktrueMainResult result=runMain(base,home,"my.common=" + common.toString(),"--include-jetty-dir=${my.common}");
METHOD_INVOCATION
Apr 22, 2021 4:59:02 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:02 PM Utilities.ASTUtils printCodeMappingStuff
INFO: outputFile -> outputFile
true,class org.eclipse.jdt.core.dom.Block,FS.ensureDirExists(outputFile.getParentFile());
class org.eclipse.jdt.core.dom.BlocktrueFS.ensureDirExists(outputFile.getParent());
METHOD_INVOCATION
Apr 22, 2021 4:59:04 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getParentFile(), :[9x2].getParent())
Apr 22, 2021 4:59:04 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:59:07 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:07 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:59:10 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:10 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:59:16 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:16 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:59:19 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:59:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 4:59:23 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(corp.toString());
METHOD_INVOCATION
Apr 22, 2021 4:59:25 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:25 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:59:29 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:59:29 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:59:32 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:32 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 4:59:35 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:59:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(corp,"start.ini","jetty.http.port=9090","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(corp,"start.ini","jetty.http.port=9090","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 4:59:39 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","jetty.http.port=8080","--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","jetty.http.port=8080","--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION
Apr 22, 2021 4:59:42 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:42 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath().toRealPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base.toRealPath()));
METHOD_INVOCATION
Apr 22, 2021 4:59:48 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 4:59:48 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath(),"--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString(),"--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 4:59:55 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:55 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 4:59:55 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:00:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 5:00:04 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:04 PM Utilities.ASTUtils printCodeMappingStuff
INFO: corp -> corp
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",devops.getAbsolutePath(),common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",devops.toString(),common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:00:11 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:11 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:11 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 5:00:14 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:14 PM Utilities.ASTUtils printCodeMappingStuff
INFO: opt -> opt
true,class org.eclipse.jdt.core.dom.Block,File common=new File(opt,"common");
class org.eclipse.jdt.core.dom.BlocktruePath common=opt.resolve("common");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:00:15 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:00:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath(),"--include-jetty-dir=" + corp.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString(),"--include-jetty-dir=" + corp.toString());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:00:23 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:23 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: devops -> devops
true,class org.eclipse.jdt.core.dom.Block,assertIdOrder(sources,"<command-line>","${jetty.base}",devops.getAbsolutePath(),common.getAbsolutePath(),corp.getAbsolutePath(),"${jetty.home}");
class org.eclipse.jdt.core.dom.BlocktrueassertIdOrder(sources,"<command-line>","${jetty.base}",devops.toString(),common.toString(),corp.toString(),"${jetty.home}");
METHOD_INVOCATION METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:00:29 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:29 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:29 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:29 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.getAbsolutePath(),"jetty.http.port=8080");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(common,"start.ini","--include-jetty-dir=" + corp.toString(),"jetty.http.port=8080");
METHOD_INVOCATION
Apr 22, 2021 5:00:32 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:32 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","--include-jetty-dir=" + common.toString());
METHOD_INVOCATION
Apr 22, 2021 5:00:36 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:36 PM Utilities.ASTUtils printCodeMappingStuff
INFO: common -> common
true,class org.eclipse.jdt.core.dom.Block,expectedSearchOrder.add(common.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueexpectedSearchOrder.add(common.toString());
METHOD_INVOCATION
Apr 22, 2021 5:00:38 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:38 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home));
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:00:42 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 5:00:42 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,TestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","my.common=" + common.getAbsolutePath(),"--include-jetty-dir=${my.common}");
class org.eclipse.jdt.core.dom.BlocktrueTestEnv.makeFile(base,"start.ini","jetty.http.host=127.0.0.1","my.common=" + common.toString(),"--include-jetty-dir=${my.common}");
METHOD_INVOCATION
Apr 22, 2021 5:00:45 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:00:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: base -> base
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyBaseConfigSource(base.toPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyBaseConfigSource(base));
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:00:49 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 5:00:49 PM Utilities.ASTUtils printCodeMappingStuff
INFO: home -> home
true,class org.eclipse.jdt.core.dom.Block,sources.add(new JettyHomeConfigSource(home.toPath().toRealPath()));
class org.eclipse.jdt.core.dom.Blocktruesources.add(new JettyHomeConfigSource(home.toRealPath()));
METHOD_INVOCATION
Apr 22, 2021 5:00:54 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 5:00:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: webinf -> webinf
true,class org.eclipse.jdt.core.dom.Block,File webxml=new File(webinf,"web.xml");
class org.eclipse.jdt.core.dom.BlocktruePath webxml=webinf.resolve("web.xml");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:00:56 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:00:56 PM Utilities.ASTUtils printCodeMappingStuff
INFO: destFile -> destFile
true,class org.eclipse.jdt.core.dom.Block,FS.ensureDirExists(destFile.getParentFile());
class org.eclipse.jdt.core.dom.BlocktrueFS.ensureDirExists(destFile.getParent());
METHOD_INVOCATION
Apr 22, 2021 5:00:58 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getParentFile(), :[9x2].getParent())
Apr 22, 2021 5:00:58 PM Utilities.ASTUtils printCodeMappingStuff
INFO: destFile -> destFile
true,class org.eclipse.jdt.core.dom.Block,IO.copy(srcFile,destFile);
class org.eclipse.jdt.core.dom.BlocktrueIO.copy(srcFile.toFile(),destFile.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:01:00 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:00 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:00 PM Utilities.ASTUtils printCodeMappingStuff
INFO: testWebXml -> testWebXml
true,class org.eclipse.jdt.core.dom.Block,IO.copy(testWebXml,webxml);
class org.eclipse.jdt.core.dom.BlocktrueIO.copy(testWebXml.toFile(),webxml.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:01:02 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:02 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:02 PM Utilities.ASTUtils printCodeMappingStuff
INFO: classesDir -> classesDir
true,class org.eclipse.jdt.core.dom.Block,File destFile=new File(classesDir,OS.separators(endpointPath));
class org.eclipse.jdt.core.dom.BlocktruePath destFile=classesDir.resolve(endpointPath);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:01:04 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],OS.separators(:[11])), :[2x1].resolve(:[11]))
Apr 22, 2021 5:01:04 PM Utilities.ASTUtils printCodeMappingStuff
INFO: webxml -> webxml
true,class org.eclipse.jdt.core.dom.Block,IO.copy(testWebXml,webxml);
class org.eclipse.jdt.core.dom.BlocktrueIO.copy(testWebXml.toFile(),webxml.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:01:06 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:06 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:06 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directory -> directory
true,class org.eclipse.jdt.core.dom.Block,directory=File.createTempFile("ewyk","dir");
class org.eclipse.jdt.core.dom.Blocktruedirectory=Files.createTempDirectory("ewyk");
METHOD_INVOCATION
Apr 22, 2021 5:01:08 PM type.change.Infer inferTransformation
INFO: (File.createTempFile(:[11x1],:[11x2]), Files.createTempDirectory(:[11x1]))
Apr 22, 2021 5:01:08 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directory -> directory
true,class org.eclipse.jdt.core.dom.Block,server=new TestServer(directory);
class org.eclipse.jdt.core.dom.Blocktrueserver=new TestServer(directory.toFile());
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:01:10 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:10 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,properties.setProperty("test.basedir",baseDir.getAbsolutePath());
class org.eclipse.jdt.core.dom.Blocktrueproperties.setProperty("test.basedir",baseDir.toString());
METHOD_INVOCATION
Apr 22, 2021 5:01:13 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:01:13 PM Utilities.ASTUtils printCodeMappingStuff
INFO: testResourcesDir -> testResourcesDir
true,class org.eclipse.jdt.core.dom.Block,properties.setProperty("test.resourcesdir",testResourcesDir.getAbsolutePath());
class org.eclipse.jdt.core.dom.Blocktrueproperties.setProperty("test.resourcesdir",testResourcesDir.toString());
METHOD_INVOCATION
Apr 22, 2021 5:01:16 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:01:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: root -> root
true,class org.eclipse.jdt.core.dom.Block,walkFileTree(root.toPath(),new SimpleFileVisitor<Path>(){  @Override public FileVisitResult preVisitDirectory(  Path dir,  BasicFileAttributes attrs){    for (    PathMatcher matcher : directoryExcludes) {      if (matcher.matches(dir)) {        return SKIP_SUBTREE;      }    }    directories.put(dir,attrs.lastModifiedTime().toMillis());    return CONTINUE;  }  @Override public FileVisitResult visitFile(  Path file,  BasicFileAttributes attrs){    for (    PathMatcher matcher : fileExcludes) {      if (matcher.matches(file)) {        return CONTINUE;      }    }    files.put(file,attrs.lastModifiedTime().toMillis());    return CONTINUE;  }});
class org.eclipse.jdt.core.dom.BlocktruewalkFileTree(root,new SimpleFileVisitor<Path>(){  @Override public FileVisitResult preVisitDirectory(  Path dir,  BasicFileAttributes attrs){    for (    PathMatcher matcher : directoryExcludes) {      if (matcher.matches(dir)) {        return SKIP_SUBTREE;      }    }    directories.put(dir,attrs.lastModifiedTime().toMillis());    return CONTINUE;  }  @Override public FileVisitResult visitFile(  Path file,  BasicFileAttributes attrs){    for (    PathMatcher matcher : fileExcludes) {      if (matcher.matches(file)) {        return CONTINUE;      }    }    files.put(file,attrs.lastModifiedTime().toMillis());    return CONTINUE;  }});
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:01:16 PM type.change.Infer inferTransformation
INFO: TOO LARGE!!!
Apr 22, 2021 5:01:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: root -> root
true,class org.eclipse.jdt.core.dom.Block,walkFileTree(root.toPath(),new SimpleFileVisitor<Path>(){  @Override public FileVisitResult preVisitDirectory(  Path dir,  BasicFileAttributes attrs) throws IOException {    for (    PathMatcher matcher : directoryExcludes) {      if (matcher.matches(dir)) {        return SKIP_SUBTREE;      }    }    updateFsTreeAndAcceptConsumables(directories,directoryUpdateConsumers,directoryCreateConsumers,dir,attrs);    return CONTINUE;  }  @Override public FileVisitResult visitFile(  Path file,  BasicFileAttributes attrs){    for (    PathMatcher matcher : fileExcludes) {      if (matcher.matches(file)) {        return CONTINUE;      }    }    updateFsTreeAndAcceptConsumables(files,fileUpdateConsumers,fileCreateConsumers,file,attrs);    return CONTINUE;  }});
class org.eclipse.jdt.core.dom.BlocktruewalkFileTree(root,new SimpleFileVisitor<Path>(){  @Override public FileVisitResult preVisitDirectory(  Path dir,  BasicFileAttributes attrs) throws IOException {    for (    PathMatcher matcher : directoryExcludes) {      if (matcher.matches(dir)) {        return SKIP_SUBTREE;      }    }    updateFsTreeAndAcceptConsumables(directories,directoryUpdateConsumers,directoryCreateConsumers,dir,attrs);    return CONTINUE;  }  @Override public FileVisitResult visitFile(  Path file,  BasicFileAttributes attrs){    for (    PathMatcher matcher : fileExcludes) {      if (matcher.matches(file)) {        return CONTINUE;      }    }    updateFsTreeAndAcceptConsumables(files,fileUpdateConsumers,fileCreateConsumers,file,attrs);    return CONTINUE;  }});
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:01:16 PM type.change.Infer inferTransformation
INFO: TOO LARGE!!!
Apr 22, 2021 5:01:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: root -> root
true,class org.eclipse.jdt.core.dom.Block,Thread initializer=new Thread(() -> {  try {    long start=System.currentTimeMillis();    add(root.toPath());    LOG.info("Initial indexing complete after {} msec ",System.currentTimeMillis() - start);  }  finally {    initialIndexingLatch.countDown();  }});
class org.eclipse.jdt.core.dom.BlocktrueThread initializer=new Thread(() -> {  try {    long start=System.currentTimeMillis();    add(root);    LOG.info("Initial indexing complete after {} msec ",System.currentTimeMillis() - start);  }  finally {    initialIndexingLatch.countDown();  }});
METHOD_INVOCATION
Apr 22, 2021 5:01:22 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 5:01:22 PM Utilities.ASTUtils printCodeMappingStuff
INFO: root -> root
true,class org.eclipse.jdt.core.dom.Block,String internalPath=toInternalPath(root.toPath(),path);
class org.eclipse.jdt.core.dom.BlocktrueString internalPath=toInternalPath(root,path);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:01:23 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 5:01:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: journalDirectory -> journalDirectory
true,class org.eclipse.jdt.core.dom.Block,LOG.error("Cannot create journal directory at {}, please check the permissions",journalDirectory.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueLOG.error("Cannot create journal directory at {}, please check the permissions",journalDirectory.toAbsolutePath());
METHOD_INVOCATION
Apr 22, 2021 5:01:26 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toAbsolutePath())
Apr 22, 2021 5:01:26 PM Utilities.ASTUtils printCodeMappingStuff
INFO: journalDirectory -> journalDirectory
true,class org.eclipse.jdt.core.dom.Block,committedReadOffsetFile=new File(journalDirectory,"graylog2-committed-read-offset");
class org.eclipse.jdt.core.dom.BlocktruecommittedReadOffsetFile=new File(journalDirectory.toFile(),"graylog2-committed-read-offset");
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:01:29 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:29 PM Utilities.ASTUtils printCodeMappingStuff
INFO: journalDirectory -> journalDirectory
true,class org.eclipse.jdt.core.dom.Block,logManager=new LogManager(new File[]{journalDirectory},Map$.MODULE$.<String,LogConfig>empty(),defaultConfig,cleanerConfig,NUM_IO_THREADS,SECONDS.toMillis(60L),SECONDS.toMillis(60L),SECONDS.toMillis(60L),kafkaScheduler,brokerState,JODA_TIME);
class org.eclipse.jdt.core.dom.BlocktruelogManager=new LogManager(new File[]{journalDirectory.toFile()},Map$.MODULE$.<String,LogConfig>empty(),defaultConfig,cleanerConfig,NUM_IO_THREADS,SECONDS.toMillis(60L),SECONDS.toMillis(60L),SECONDS.toMillis(60L),kafkaScheduler,brokerState,JODA_TIME);
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:01:44 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:01:44 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directory -> directory
true,class org.eclipse.jdt.core.dom.Block,throw UndertowLogger.ROOT_LOGGER.couldNotCreateLogDirectory(directory);
class org.eclipse.jdt.core.dom.Blocktruethrow UndertowLogger.ROOT_LOGGER.couldNotCreateLogDirectory(directory,e);
METHOD_INVOCATION
Apr 22, 2021 5:01:48 PM type.change.Infer inferTransformation
INFO: (:[9x1:e].couldNotCreateLogDirectory(:[11]), :[9x1].couldNotCreateLogDirectory(:[11],e))
Apr 22, 2021 5:01:48 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directory -> directory
true,class org.eclipse.jdt.core.dom.Block,if(!directory.mkdirs())
class org.eclipse.jdt.core.dom.Blocktrueif(!Files.exists(directory))
METHOD_INVOCATION
Apr 22, 2021 5:01:51 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].mkdirs(), Files.exists(:[9x2]))
Apr 22, 2021 5:01:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,file=File.createTempFile("host",".xml",hostConfigFile.getAbsoluteFile().getParentFile());
class org.eclipse.jdt.core.dom.Blocktruefile=Files.createTempFile(hostConfigFile.toPath().getParent(),"host",".xml");
METHOD_INVOCATION
Apr 22, 2021 5:01:57 PM type.change.Infer inferTransformation
INFO: (File.createTempFile(:[11x1],:[11x2],hostConfigFile.getAbsoluteFile().getParentFile()), Files.createTempFile(hostConfigFile.toPath().getParent(),:[11x1],:[11x2]))
Apr 22, 2021 5:01:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,file.deleteOnExit();
class org.eclipse.jdt.core.dom.Blocktruereturn file.toFile();
METHOD_INVOCATION_NAME
Apr 22, 2021 5:01:57 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:01:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,return file;
class org.eclipse.jdt.core.dom.Blocktruewriter=Files.newBufferedWriter(file);
ARGUMENT_REPLACED_WITH_RETURN_EXPRESSION
Apr 22, 2021 5:01:57 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:01:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: oldVersionsBaseDir -> oldVersionsBaseDir
true,class org.eclipse.jdt.core.dom.Block,File file=new File(oldVersionsBaseDir,version.getZipFileName());
class org.eclipse.jdt.core.dom.BlocktruePath file=oldVersionsBaseDir.resolve(version.getZipFileName());
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:00 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:02:00 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,throw new RuntimeException("Old version not found in " + file.getAbsolutePath());
class org.eclipse.jdt.core.dom.Blocktruethrow new RuntimeException("Old version not found in " + file.toAbsolutePath().toString());
METHOD_INVOCATION
Apr 22, 2021 5:02:05 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 5:02:05 PM Utilities.ASTUtils printCodeMappingStuff
INFO: dir -> dir
true,class org.eclipse.jdt.core.dom.Block,Assert.assertTrue(dir.exists());
class org.eclipse.jdt.core.dom.BlocktrueAssert.assertTrue(Files.exists(dir));
METHOD_INVOCATION
Apr 22, 2021 5:02:07 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 5:02:07 PM Utilities.ASTUtils printCodeMappingStuff
INFO: layersDir -> layersDir
true,class org.eclipse.jdt.core.dom.Block,Assert.assertTrue(layersDir.exists());
class org.eclipse.jdt.core.dom.BlocktrueAssert.assertTrue(Files.exists(layersDir));
METHOD_INVOCATION
Apr 22, 2021 5:02:09 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].exists(), Files.exists(:[9x2]))
Apr 22, 2021 5:02:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: layersDir -> layersDir
true,class org.eclipse.jdt.core.dom.Block,File layerDir=new File(layersDir,layer);
class org.eclipse.jdt.core.dom.BlocktruePath layerDir=layersDir.resolve(layer);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:11 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:02:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: layersDir -> layersDir
true,class org.eclipse.jdt.core.dom.Block,File layerDir=new File(layersDir,layer);
class org.eclipse.jdt.core.dom.BlocktruePath layerDir=layersDir.resolve(layer);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:12 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:02:12 PM Utilities.ASTUtils printCodeMappingStuff
INFO: layersDir -> layersDir
true,class org.eclipse.jdt.core.dom.Block,File layerDir=new File(layersDir,layer);
class org.eclipse.jdt.core.dom.BlocktruePath layerDir=layersDir.resolve(layer);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:14 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:02:14 PM Utilities.ASTUtils printCodeMappingStuff
INFO: jarFile -> jarFile
true,class org.eclipse.jdt.core.dom.Block,jar.as(ZipExporter.class).exportTo(jarFile);
class org.eclipse.jdt.core.dom.Blocktruejar.as(ZipExporter.class).exportTo(jarFile.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:15 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:02:15 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> webUiDir
true,class org.eclipse.jdt.core.dom.Block,final File tmpDir=restConfiguration.getTmpDir();
class org.eclipse.jdt.core.dom.Blocktruefinal Path tmpDir=restConfiguration.getWebUiDir();
TYPE VARIABLE_NAME METHOD_INVOCATION_NAME
Apr 22, 2021 5:02:16 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getTmpDir(), :[9x2].getWebUiDir())
Apr 22, 2021 5:02:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> webUiDir
true,class org.eclipse.jdt.core.dom.Block,final File tmpDir=restConfiguration.getTmpDir();
class org.eclipse.jdt.core.dom.Blocktruefinal Path tmpDir=restConfiguration.getWebUiDir();
TYPE VARIABLE_NAME METHOD_INVOCATION_NAME
Apr 22, 2021 5:02:18 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getTmpDir(), :[9x2].getWebUiDir())
Apr 22, 2021 5:02:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: tmpDir -> webUiDir
true,class org.eclipse.jdt.core.dom.Block,return FutureUtils.runAfterwardsAsync(shutdownFuture,() -> {  Exception exception=null;  try {    log.info("Removing cache directory {}",tmpDir);    FileUtils.deleteDirectory(tmpDir);  } catch (  Exception e) {    exception=e;  }  try {    leaderElectionService.stop();  } catch (  Exception e) {    exception=ExceptionUtils.firstOrSuppressed(e,exception);  }  if (exception != null) {    throw exception;  }});
class org.eclipse.jdt.core.dom.Blocktruereturn FutureUtils.runAfterwardsAsync(shutdownFuture,() -> {  Exception exception=null;  try {    log.info("Removing cache directory {}",tmpDir);    FileUtils.deleteDirectory(tmpDir.toFile());  } catch (  Exception e) {    exception=e;  }  try {    leaderElectionService.stop();  } catch (  Exception e) {    exception=ExceptionUtils.firstOrSuppressed(e,exception);  }  if (exception != null) {    throw exception;  }});
VARIABLE_NAME VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:18 PM type.change.Infer inferTransformation
INFO: TOO LARGE!!!
Apr 22, 2021 5:02:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,String relativePath=PathUtils.sanitize(new PathResolver().relativePath(baseDir,dir));
class org.eclipse.jdt.core.dom.BlocktrueString relativePath=PathUtils.sanitize(new PathResolver().relativePath(baseDir.toFile(),dir));
METHOD_INVOCATION
Apr 22, 2021 5:02:22 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:02:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> moduleBaseDir
true,class org.eclipse.jdt.core.dom.Block,File file=new File(temp.newFolder(),"src/main/java/org/MyFoo.JAVA");
class org.eclipse.jdt.core.dom.BlocktruePath file=temp.newFolder().toPath();
TYPE VARIABLE_NAME CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:24 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].toPath())
Apr 22, 2021 5:02:24 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> moduleBaseDir
true,class org.eclipse.jdt.core.dom.Block,File file=new File(temp.newFolder(),"src/main/java/org/MyFoo.JAVA");
class org.eclipse.jdt.core.dom.BlocktruePath file=temp.newFolder().toPath();
TYPE VARIABLE_NAME CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:25 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].toPath())
Apr 22, 2021 5:02:25 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,this.baseDir=baseDir.getAbsoluteFile();
class org.eclipse.jdt.core.dom.Blocktruethis.baseDir=baseDir.toAbsolutePath().normalize();
METHOD_INVOCATION
Apr 22, 2021 5:02:28 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 5:02:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,String relative=PathUtils.sanitize(new PathResolver().relativePath(baseDir,new File(path)));
class org.eclipse.jdt.core.dom.BlocktrueString relative=PathUtils.sanitize(new PathResolver().relativePath(baseDir.toFile(),new File(path)));
METHOD_INVOCATION
Apr 22, 2021 5:02:34 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:02:34 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> moduleBaseDir
true,class org.eclipse.jdt.core.dom.Block,File file=new File(temp.newFolder(),"src/main/java/org/MyFoo.java");
class org.eclipse.jdt.core.dom.BlocktruePath file=temp.newFolder().toPath();
TYPE VARIABLE_NAME CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:35 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].toPath())
Apr 22, 2021 5:02:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: dirToIndex -> dirToIndex
true,class org.eclipse.jdt.core.dom.Block,Files.walkFileTree(dirToIndex.toPath().normalize(),Collections.singleton(FileVisitOption.FOLLOW_LINKS),Integer.MAX_VALUE,new IndexFileVisitor(fileSystem,status,type));
class org.eclipse.jdt.core.dom.BlocktrueFiles.walkFileTree(dirToIndex.normalize(),Collections.singleton(FileVisitOption.FOLLOW_LINKS),Integer.MAX_VALUE,new IndexFileVisitor(fileSystem,status,type));
METHOD_INVOCATION
Apr 22, 2021 5:02:45 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 5:02:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> path
true,class org.eclipse.jdt.core.dom.Block,throw new IllegalStateException("Unable to read file " + file.getAbsolutePath(),e);
class org.eclipse.jdt.core.dom.Blocktruethrow new IllegalStateException("Unable to read file " + file.toAbsolutePath().toString(),e);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:51 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toAbsolutePath())
Apr 22, 2021 5:02:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,fs=new DefaultFileSystem(baseDir.toPath()).setEncoding(UTF_8);
class org.eclipse.jdt.core.dom.Blocktruefs=new DefaultFileSystem(baseDir).setEncoding(UTF_8);
METHOD_INVOCATION
Apr 22, 2021 5:02:57 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 5:02:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,File javaFile1=new File(baseDir,"src/main/java/Foo.java");
class org.eclipse.jdt.core.dom.BlocktruePath javaFile1=baseDir.resolve("src/main/java/Foo.java");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:02:58 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:02:58 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,fs.add(new TestInputFileBuilder("polop","src/main/java/Foo.java").setModuleBaseDir(baseDir.toPath()).setType(InputFile.Type.MAIN).build());
class org.eclipse.jdt.core.dom.Blocktruefs.add(new TestInputFileBuilder("polop","src/main/java/Foo.java").setModuleBaseDir(baseDir).setCharset(StandardCharsets.UTF_8).setType(InputFile.Type.MAIN).build());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:03:44 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](), new :[1]:[3]())
Apr 22, 2021 5:03:44 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,File javaTestFile1=new File(baseDir,"src/test/java/FooTest.java");
class org.eclipse.jdt.core.dom.BlocktruePath javaTestFile1=baseDir.resolve("src/test/java/FooTest.java");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:03:46 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:03:46 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,fs.add(new TestInputFileBuilder("polop","src/test/java/FooTest.java").setModuleBaseDir(baseDir.toPath()).setType(InputFile.Type.TEST).build());
class org.eclipse.jdt.core.dom.Blocktruefs.add(new TestInputFileBuilder("polop","src/test/java/FooTest.java").setModuleBaseDir(baseDir).setCharset(StandardCharsets.UTF_8).setType(InputFile.Type.TEST).build());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:04:37 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](), new :[1]:[3]())
Apr 22, 2021 5:04:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,File phpFile1=new File(baseDir,"src/Foo.php");
class org.eclipse.jdt.core.dom.BlocktruePath phpFile1=baseDir.resolve("src/Foo.php");
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:04:39 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:04:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,fs.add(new TestInputFileBuilder("polop","src/Foo.php").setModuleBaseDir(baseDir.toPath()).setType(InputFile.Type.MAIN).build());
class org.eclipse.jdt.core.dom.Blocktruefs.add(new TestInputFileBuilder("polop","src/Foo.php").setModuleBaseDir(baseDir).setType(InputFile.Type.MAIN).setCharset(StandardCharsets.UTF_8).build());
METHOD_INVOCATION
Apr 22, 2021 5:05:25 PM type.change.Infer inferTransformation
INFO: (new :[[1]]:[3](), new :[1]:[3]())
Apr 22, 2021 5:05:25 PM Utilities.ASTUtils printCodeMappingStuff
INFO: reportDir -> reportDir
true,class org.eclipse.jdt.core.dom.Block,writer=new ScannerReportWriter(reportDir);
class org.eclipse.jdt.core.dom.Blocktruewriter=new ScannerReportWriter(reportDir.toFile());
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:05:27 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:05:27 PM Utilities.ASTUtils printCodeMappingStuff
INFO: reportDir -> reportDir
true,class org.eclipse.jdt.core.dom.Block,LOG.info("Analysis report generated in {}ms, dir size={}",stopTime - startTime,FileUtils.byteCountToDisplaySize(FileUtils.sizeOfDirectory(reportDir)));
class org.eclipse.jdt.core.dom.BlocktrueLOG.info("Analysis report generated in {}ms, dir size={}",stopTime - startTime,FileUtils.byteCountToDisplaySize(FileUtils.sizeOfDirectory(reportDir.toFile())));
METHOD_INVOCATION
Apr 22, 2021 5:05:36 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:05:36 PM Utilities.ASTUtils printCodeMappingStuff
INFO: reportDir -> reportDir
true,class org.eclipse.jdt.core.dom.Block,ZipUtils.zipDir(reportDir,reportZip);
class org.eclipse.jdt.core.dom.BlocktrueZipUtils.zipDir(reportDir.toFile(),reportZip);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:05:37 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:05:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: dirOrFile -> dirOrFile
true,class org.eclipse.jdt.core.dom.Block,indexDirectory(fileSystem,progress,dirOrFile.toPath(),type);
class org.eclipse.jdt.core.dom.BlocktrueindexDirectory(dirOrFile,type,progress);
METHOD_INVOCATION_ARGUMENT
Apr 22, 2021 5:05:40 PM type.change.Infer inferTransformation
INFO: (dirOrFile.toPath(), progress)
Apr 22, 2021 5:05:40 PM Utilities.ASTUtils printCodeMappingStuff
INFO: dirOrFile -> dirOrFile
true,class org.eclipse.jdt.core.dom.Block,tasks.add(executorService.submit(() -> indexFile(fileSystem,progress,dirOrFile.toPath(),type)));
class org.eclipse.jdt.core.dom.Blocktruetasks.add(executorService.submit(() -> indexFile(dirOrFile,type,progress)));
METHOD_INVOCATION
Apr 22, 2021 5:05:49 PM type.change.Infer inferTransformation
INFO: (dirOrFile.toPath(), progress)
Apr 22, 2021 5:05:49 PM Utilities.ASTUtils printCodeMappingStuff
INFO: dirOrFile -> dirOrFile
true,class org.eclipse.jdt.core.dom.Block,if(dirOrFile.isDirectory())
class org.eclipse.jdt.core.dom.Blocktrueif(dirOrFile.toFile().isDirectory())
METHOD_INVOCATION
Apr 22, 2021 5:05:51 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:05:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: f -> f
true,class org.eclipse.jdt.core.dom.Block,return FilenameUtils.separatorsToUnix(f.getCanonicalPath());
class org.eclipse.jdt.core.dom.Blocktruereturn FilenameUtils.separatorsToUnix(f.toString());
METHOD_INVOCATION
Apr 22, 2021 5:05:54 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getCanonicalPath(), :[9x2].toString())
Apr 22, 2021 5:05:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: workDir -> workDir
true,class org.eclipse.jdt.core.dom.Block,this.workDir=definition.getWorkDir();
class org.eclipse.jdt.core.dom.Blocktruethis.workDir=initWorkingDir(definition);
METHOD_INVOCATION
Apr 22, 2021 5:05:55 PM type.change.Infer inferTransformation
INFO: (:[27]:[28]:[29x2c~\s*]=definition.getWorkDir(), :[27]:[28]:[29x2c~\s*]=initWorkingDir(definition))
Apr 22, 2021 5:05:55 PM Utilities.ASTUtils printCodeMappingStuff
INFO: baseDir -> baseDir
true,class org.eclipse.jdt.core.dom.Block,this.baseDir=definition.getBaseDir();
class org.eclipse.jdt.core.dom.Blocktruethis.baseDir=initBaseDir(definition);
METHOD_INVOCATION
Apr 22, 2021 5:05:57 PM type.change.Infer inferTransformation
INFO: (:[27]:[28]:[29x2c~\s*]=definition.getBaseDir(), :[27]:[28]:[29x2c~\s*]=initBaseDir(definition))
Apr 22, 2021 5:05:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: toDir -> targetDirNormalized
true,class org.eclipse.jdt.core.dom.Block,verifyInsideTargetDirectory(entry,to.toPath(),toDir.toPath());
class org.eclipse.jdt.core.dom.BlocktrueverifyInsideTargetDirectory(entry,to.toPath(),toDir);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:05:59 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].toPath(), :[9x2])
Apr 22, 2021 5:05:59 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homeDir -> homeDir
true,class org.eclipse.jdt.core.dom.Block,Config config=configLoader.loadConfig(Optional.of(homeDir),Optional.of(new File(configPath,"neo4j.conf")),NullLog.getInstance());
class org.eclipse.jdt.core.dom.BlocktrueConfig config=configLoader.loadConfig(Optional.of(homeDir.toFile()),Optional.of(configDir.resolve("neo4j.conf").toFile()),NullLog.getInstance());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:06:09 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:06:09 PM type.change.Infer inferTransformation
INFO: (new File(configPath,:[2x2]), configDir.resolve(:[2x2]).toFile())
Apr 22, 2021 5:06:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: homeDir -> homeDir
true,class org.eclipse.jdt.core.dom.Block,Config config=configLoader.loadConfig(Optional.of(homeDir),Optional.of(new File(configPath,"neo4j.conf")),NullLog.getInstance());
class org.eclipse.jdt.core.dom.BlocktrueConfig config=configLoader.loadConfig(Optional.of(homeDir.toFile()),Optional.of(configDir.resolve("neo4j.conf").toFile()),NullLog.getInstance());
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:06:19 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:06:19 PM type.change.Infer inferTransformation
INFO: (new File(configPath,:[2x2]), configDir.resolve(:[2x2]).toFile())
Apr 22, 2021 5:06:19 PM Utilities.ASTUtils printCodeMappingStuff
INFO: storeDir -> storeDir
true,class org.eclipse.jdt.core.dom.Block,return dbRule.restartDatabase((fs,storeDirectory) -> {  for (  File logFile : storeDir.listFiles(logFileFilter)) {    logFile.delete();  }});
class org.eclipse.jdt.core.dom.Blocktruereturn dbRule.restartDatabase((fs,storeDirectory) -> {  Iterable<Path> logFiles=Files.list(storeDirstoreDir).filter(logFileFilter)::iterator;  for (  Path logFile : logFiles) {    Files.delete(logFile);  }});
TYPE METHOD_INVOCATION METHOD_INVOCATION_ARGUMENT_WRAPPED
Apr 22, 2021 5:06:23 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:06:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: storeDir -> storeDir
true,class org.eclipse.jdt.core.dom.Block,OnlineBackupKernelExtension backup=(OnlineBackupKernelExtension)new OnlineBackupExtensionFactory().newInstance(new SimpleKernelContext(storeDir,DatabaseInfo.UNKNOWN,dependencies),DependenciesProxy.dependencies(dependencies,OnlineBackupExtensionFactory.Dependencies.class));
class org.eclipse.jdt.core.dom.BlocktrueOnlineBackupKernelExtension backup=(OnlineBackupKernelExtension)new OnlineBackupExtensionFactory().newInstance(new SimpleKernelContext(storeDir.toFile(),DatabaseInfo.UNKNOWN,dependencies),DependenciesProxy.dependencies(dependencies,OnlineBackupExtensionFactory.Dependencies.class));
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:06:37 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:06:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: storeDir -> storeDir
true,class org.eclipse.jdt.core.dom.Block,File neoStore=new File(storeDir,MetaDataStore.DEFAULT_NAME);
class org.eclipse.jdt.core.dom.BlocktruePath neoStore=storeDir.resolve(MetaDataStore.DEFAULT_NAME);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:06:40 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:06:40 PM Utilities.ASTUtils printCodeMappingStuff
INFO: storeDir -> storeDir
true,class org.eclipse.jdt.core.dom.Block,OnlineBackupKernelExtension backup=(OnlineBackupKernelExtension)new OnlineBackupExtensionFactory().newInstance(new SimpleKernelContext(storeDir,DatabaseInfo.UNKNOWN,dependencies),DependenciesProxy.dependencies(dependencies,OnlineBackupExtensionFactory.Dependencies.class));
class org.eclipse.jdt.core.dom.BlocktrueOnlineBackupKernelExtension backup=(OnlineBackupKernelExtension)new OnlineBackupExtensionFactory().newInstance(new SimpleKernelContext(storeDir.toFile(),DatabaseInfo.UNKNOWN,dependencies),DependenciesProxy.dependencies(dependencies,OnlineBackupExtensionFactory.Dependencies.class));
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:06:54 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:06:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: storeDir -> storeDir
true,class org.eclipse.jdt.core.dom.Block,GraphDatabaseAPI db2=dbRule.restartDatabase((fs,storeDirectory) -> {  deleteAllBackedUpTransactionLogs();  fileSystem.deleteRecursively(storeDir);  fileSystem.mkdir(storeDir);});
class org.eclipse.jdt.core.dom.BlocktrueGraphDatabaseAPI db2=dbRule.restartDatabase((fs,storeDirectory) -> {  deleteAllBackedUpTransactionLogs();  FileUtils.deletePathRecursively(storeDir);  Files.createDirectory(storeDir);});
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:07:01 PM type.change.Infer inferTransformation
INFO: (fileSystem.deleteRecursively(:[11]), FileUtils.deletePathRecursively(:[11]))
Apr 22, 2021 5:07:01 PM type.change.Infer inferTransformation
INFO: (fileSystem.mkdir(:[11]), Files.createDirectory(:[11]))
Apr 22, 2021 5:07:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: storeDir -> storeDir
true,class org.eclipse.jdt.core.dom.Block,return DbRepresentation.of(storeDir,Config.defaults(OnlineBackupSettings.online_backup_enabled,Settings.FALSE));
class org.eclipse.jdt.core.dom.Blocktruereturn DbRepresentation.of(storeDir.toFile(),config);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:07:09 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:07:09 PM type.change.Infer inferTransformation
INFO: (Config.defaults(OnlineBackupSettings.online_backup_enabled,Settings.FALSE), config)
Apr 22, 2021 5:07:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: directory -> directory
true,class org.eclipse.jdt.core.dom.Block,return directory.toPath().resolveSibling(format(pattern,directory.getName(),iteration)).toFile();
class org.eclipse.jdt.core.dom.BlocktruePath directoryName=directory.getName(directory.getNameCount() - 1);
METHOD_INVOCATION_ARGUMENT
Apr 22, 2021 5:07:09 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:07:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: targetDirectory -> targetDirectory
true,class org.eclipse.jdt.core.dom.Block,return (GraphDatabaseAPI)factory.newEmbeddedDatabaseBuilder(targetDirectory).setConfig(config).setConfig(OnlineBackupSettings.online_backup_enabled,Settings.FALSE).newGraphDatabase();
class org.eclipse.jdt.core.dom.Blocktruereturn (GraphDatabaseAPI)factory.newEmbeddedDatabaseBuilder(targetDirectory.toFile()).setConfig(config).setConfig(OnlineBackupSettings.online_backup_enabled,Settings.FALSE).newGraphDatabase();
METHOD_INVOCATION
Apr 22, 2021 5:07:39 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:07:39 PM Utilities.ASTUtils printCodeMappingStuff
INFO: getResolvedLocationFromName -> getResolvedLocationFromName
true,class org.eclipse.jdt.core.dom.Block,return folder.resolve(name).toFile();
class org.eclipse.jdt.core.dom.Blocktruereturn folder.resolve(name);
METHOD_INVOCATION
Apr 22, 2021 5:07:41 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].resolve(name), :[9x2])
Apr 22, 2021 5:07:41 PM Utilities.ASTUtils printCodeMappingStuff
INFO: countNumberOfFilesProcessedForPotentialErrorMessage -> countNumberOfFilesProcessedForPotentialErrorMessage
true,class org.eclipse.jdt.core.dom.Block,return availableAlternativeNames(file,pattern).peek(countNumberOfFilesProcessedForPotentialErrorMessage).filter(f -> !backupExists(f)).findFirst().orElseThrow(() -> new RuntimeException(String.format("Unable to find a free backup location for the provided %s. Number of iterations %d",file,counter.get())));
class org.eclipse.jdt.core.dom.Blocktruereturn availableAlternativeNames(file,pattern).peek(countNumberOfFilesProcessedForPotentialErrorMessage).filter(f -> !backupExists(f)).findFirst().orElseThrow(noFreeBackupLocation(file,counter));
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:07:51 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:07:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: workDirectory -> workDirectory
true,class org.eclipse.jdt.core.dom.Block,FileUtils.deleteRecursively(workDirectory);
class org.eclipse.jdt.core.dom.BlocktrueFileUtils.deletePathRecursively(workDirectory);
METHOD_INVOCATION_NAME
Apr 22, 2021 5:07:52 PM type.change.Infer inferTransformation
INFO: (FileUtils.deleteRecursively(:[11]), FileUtils.deletePathRecursively(:[11]))
Apr 22, 2021 5:07:52 PM Utilities.ASTUtils printCodeMappingStuff
INFO: targetDirectory -> targetDirectory
true,class org.eclipse.jdt.core.dom.Block,StoreCopyClient storeCopier=new StoreCopyClient(targetDirectory,tuningConfiguration,loadKernelExtensions(),logProvider,fileSystem,pageCache,monitors.newMonitor(StoreCopyClient.Monitor.class,getClass()),forensics);
class org.eclipse.jdt.core.dom.BlocktruetuningConfiguration.augment(logs_directory,targetDirectory.toRealPath().toString());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_NAME VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:07:52 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:07:52 PM Utilities.ASTUtils printCodeMappingStuff
INFO: targetDirectory -> targetDirectory
true,class org.eclipse.jdt.core.dom.Block,if(!directoryIsEmpty(fileSystem,targetDirectory))
class org.eclipse.jdt.core.dom.Blocktrueif(!directoryIsEmpty(targetDirectory))
METHOD_INVOCATION
Apr 22, 2021 5:07:53 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:07:53 PM Utilities.ASTUtils printCodeMappingStuff
INFO: neoStore -> neoStore
true,class org.eclipse.jdt.core.dom.Block,long txIdFromOrigin=MetaDataStore.getRecord(resolver.resolveDependency(PageCache.class),neoStore,Position.LAST_TRANSACTION_ID);
class org.eclipse.jdt.core.dom.Blocktruelong txIdFromOrigin=MetaDataStore.getRecord(pageCache,neoStore.toFile(),Position.LAST_TRANSACTION_ID);
ARGUMENT_REPLACED_WITH_VARIABLE VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:07:59 PM type.change.Infer inferTransformation
INFO: (resolver.resolveDependency(PageCache.class), pageCache)
Apr 22, 2021 5:07:59 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:07:59 PM Utilities.ASTUtils printCodeMappingStuff
INFO: file -> file
true,class org.eclipse.jdt.core.dom.Block,return availableAlternativeNames(file,pattern).peek(countNumberOfFilesProcessedForPotentialErrorMessage).filter(f -> !backupExists(f)).findFirst().orElseThrow(() -> new RuntimeException(String.format("Unable to find a free backup location for the provided %s. Number of iterations %d",file,counter.get())));
class org.eclipse.jdt.core.dom.Blocktruereturn availableAlternativeNames(file,pattern).peek(countNumberOfFilesProcessedForPotentialErrorMessage).filter(f -> !backupExists(f)).findFirst().orElseThrow(noFreeBackupLocation(file,counter));
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:08:09 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:08:09 PM Utilities.ASTUtils printCodeMappingStuff
INFO: targetDirectory -> targetDirectory
true,class org.eclipse.jdt.core.dom.Block,FileUtils.deleteRecursively(targetDirectory);
class org.eclipse.jdt.core.dom.BlocktrueFileUtils.deletePathRecursively(targetDirectory);
METHOD_INVOCATION_NAME
Apr 22, 2021 5:08:10 PM type.change.Infer inferTransformation
INFO: (FileUtils.deleteRecursively(:[11]), FileUtils.deletePathRecursively(:[11]))
Apr 22, 2021 5:08:10 PM Utilities.ASTUtils printCodeMappingStuff
INFO: targetDirectory -> targetDirectory
true,class org.eclipse.jdt.core.dom.Block,if(directoryIsEmpty(fileSystem,targetDirectory))
class org.eclipse.jdt.core.dom.Blocktrueif(directoryIsEmpty(targetDirectory))
METHOD_INVOCATION
Apr 22, 2021 5:08:11 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:08:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: destDir -> destDir
true,class org.eclipse.jdt.core.dom.Block,remoteStore.copy(fromAddress,expectedStoreId,destDir);
class org.eclipse.jdt.core.dom.BlocktrueremoteStore.copy(fromAddress,expectedStoreId,destDir.toFile());
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:08:13 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:08:13 PM Utilities.ASTUtils printCodeMappingStuff
INFO: desiredBackupLocation -> desiredBackupLocation
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(fromAddress.getHost(),fromAddress.getPort(),desiredBackupLocation,consistencyCheck,config,timeout,forensics);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(host,port,desiredBackupLocation,consistencyCheck,config,timeout,forensics);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:08:18 PM type.change.Infer inferTransformation
INFO: (fromAddress.getHost(), host)
Apr 22, 2021 5:08:18 PM type.change.Infer inferTransformation
INFO: (fromAddress.getPort(), port)
Apr 22, 2021 5:08:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDestination -> backupDestination
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doIncrementalBackup(resolvedAddress.getHost(),resolvedAddress.getPort(),backupDestination,ConsistencyCheck.NONE,timeout,config);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doIncrementalBackup(host,port,backupDestination,ConsistencyCheck.NONE,timeout,config);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:08:23 PM type.change.Infer inferTransformation
INFO: (resolvedAddress.getHost(), host)
Apr 22, 2021 5:08:23 PM type.change.Infer inferTransformation
INFO: (resolvedAddress.getPort(), port)
Apr 22, 2021 5:08:23 PM Utilities.ASTUtils printCodeMappingStuff
INFO: neoStore -> neoStore
true,class org.eclipse.jdt.core.dom.Block,return MetaDataStore.getRecord(pageCache,neoStore,Position.LAST_TRANSACTION_CHECKSUM);
class org.eclipse.jdt.core.dom.Blocktruereturn MetaDataStore.getRecord(pageCache,neoStore.toFile(),Position.LAST_TRANSACTION_CHECKSUM);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:08:27 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:08:27 PM Utilities.ASTUtils printCodeMappingStuff
INFO: PATH -> PATH
true,class org.eclipse.jdt.core.dom.Block,return Iterables.concat(allCombinations(stringMap("host",HOST,"port",String.valueOf(PORT),"to",PATH.getAbsolutePath())),allCombinations(stringMap("from",HOST + ":" + PORT,"to",PATH.getAbsolutePath())));
class org.eclipse.jdt.core.dom.Blocktruereturn Iterables.concat(allCombinations(stringMap("host",HOST,"port",String.valueOf(PORT),"to",PATH.toString())),allCombinations(stringMap("from",HOST + ":" + PORT,"to",PATH.toString())));
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:08:41 PM type.change.Infer inferTransformation
INFO: (PATH.getAbsolutePath(), PATH.toString())
Apr 22, 2021 5:08:41 PM type.change.Infer inferTransformation
INFO: (PATH.getAbsolutePath(), PATH.toString())
Apr 22, 2021 5:08:41 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupService().doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.FULL,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupService().doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.FULL,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
METHOD_INVOCATION
Apr 22, 2021 5:08:46 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:08:46 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupService().doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.FULL,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupService().doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.FULL,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
METHOD_INVOCATION
Apr 22, 2021 5:08:51 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:08:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,assertFalse("Temp directory was not removed as expected",fileSystem.fileExists(new File(backupDir,StoreUtil.TEMP_COPY_DIRECTORY_NAME)));
class org.eclipse.jdt.core.dom.BlocktrueassertFalse("Temp directory was not removed as expected",Files.exists(backupDir.resolve(StoreUtil.TEMP_COPY_DIRECTORY_NAME)));
METHOD_INVOCATION
Apr 22, 2021 5:09:02 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:09:02 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:09:07 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:09:07 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,GraphDatabaseService backupBasedDatabase=new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder(backupDir.getAbsoluteFile()).setConfig(OnlineBackupSettings.online_backup_enabled,Settings.FALSE).newGraphDatabase();
class org.eclipse.jdt.core.dom.BlocktrueGraphDatabaseService backupBasedDatabase=new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder(backupDir.toFile()).setConfig(OnlineBackupSettings.online_backup_enabled,Settings.FALSE).newGraphDatabase();
METHOD_INVOCATION
Apr 22, 2021 5:09:37 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2].toFile())
Apr 22, 2021 5:09:37 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,BackupOutcome outcome=backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.FULL,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktrueBackupOutcome outcome=backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.FULL,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:09:42 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:09:42 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:09:47 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:09:47 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:09:52 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:09:52 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:09:57 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:09:57 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:01 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:01 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:06 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:06 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doIncrementalBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,BackupClient.BIG_READ_TIMEOUT,defaultConfig);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doIncrementalBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,BackupClient.BIG_READ_TIMEOUT,defaultConfig);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:11 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:11 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:16 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:21 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:21 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:26 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:26 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:30 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:30 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.FULL,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.FULL,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:35 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupProtocolService.doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupProtocolService.doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:40 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:40 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,BackupOutcome backupOutcome=backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.FULL,withOnlineBackupDisabled,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktrueBackupOutcome backupOutcome=backupProtocolService.doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.FULL,withOnlineBackupDisabled,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:45 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupService().doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupService().doFullBackup(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:50 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:50 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,backupService().doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
class org.eclipse.jdt.core.dom.BlocktruebackupService().doIncrementalBackupOrFallbackToFull(BACKUP_HOST,backupPort,backupDir,ConsistencyCheck.NONE,defaultConfig,BackupClient.BIG_READ_TIMEOUT,false);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:10:55 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsoluteFile(), :[9x2])
Apr 22, 2021 5:10:55 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,LogFiles logFiles=LogFilesBuilder.logFilesBasedOnlyBuilder(backupDir,fileSystem).build();
class org.eclipse.jdt.core.dom.BlocktrueLogFiles logFiles=LogFilesBuilder.logFilesBasedOnlyBuilder(backupDir.toFile(),fileSystem).build();
METHOD_INVOCATION
Apr 22, 2021 5:11:04 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:11:04 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,LogicalTransactionStore transactionStore=life.add(new ReadOnlyTransactionStore(pageCache,fileSystem,backupDir,Config.defaults(),monitors));
class org.eclipse.jdt.core.dom.BlocktrueLogicalTransactionStore transactionStore=life.add(new ReadOnlyTransactionStore(pageCache,fileSystem,backupDir.toFile(),Config.defaults(),monitors));
CLASS_INSTANCE_CREATION
Apr 22, 2021 5:11:16 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:11:16 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,File neoStore=new File(backupDir,MetaDataStore.DEFAULT_NAME);
class org.eclipse.jdt.core.dom.BlocktruePath neoStore=backupDir.resolve(MetaDataStore.DEFAULT_NAME);
TYPE CLASS_INSTANCE_CREATION_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:11:18 PM type.change.Infer inferTransformation
INFO: (new File(:[2x1],:[2x2]), :[2x1].resolve(:[2x2]))
Apr 22, 2021 5:11:18 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,LogFiles logFiles=LogFilesBuilder.logFilesBasedOnlyBuilder(backupDir,fileSystem).build();
class org.eclipse.jdt.core.dom.BlocktrueLogFiles logFiles=LogFilesBuilder.logFilesBasedOnlyBuilder(backupDir.toFile(),fileSystem).build();
METHOD_INVOCATION
Apr 22, 2021 5:11:28 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:11:28 PM Utilities.ASTUtils printCodeMappingStuff
INFO: backupDir -> backupDir
true,class org.eclipse.jdt.core.dom.Block,return DbRepresentation.of(backupDir,Config.defaults(OnlineBackupSettings.online_backup_enabled,Settings.FALSE));
class org.eclipse.jdt.core.dom.Blocktruereturn DbRepresentation.of(backupDir.toFile(),config);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:11:35 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:11:35 PM type.change.Infer inferTransformation
INFO: (Config.defaults(OnlineBackupSettings.online_backup_enabled,Settings.FALSE), config)
Apr 22, 2021 5:11:35 PM Utilities.ASTUtils printCodeMappingStuff
INFO: findAnAvailableBackupLocation -> findAnAvailableBackupLocation
true,class org.eclipse.jdt.core.dom.Block,return availableAlternativeNames(file,pattern).peek(countNumberOfFilesProcessedForPotentialErrorMessage).filter(f -> !backupExists(f)).findFirst().orElseThrow(() -> new RuntimeException(String.format("Unable to find a free backup location for the provided %s. Number of iterations %d",file,counter.get())));
class org.eclipse.jdt.core.dom.Blocktruereturn availableAlternativeNames(file,pattern).peek(countNumberOfFilesProcessedForPotentialErrorMessage).filter(f -> !backupExists(f)).findFirst().orElseThrow(noFreeBackupLocation(file,counter));
METHOD_INVOCATION METHOD_INVOCATION
Apr 22, 2021 5:11:45 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
Apr 22, 2021 5:11:45 PM Utilities.ASTUtils printCodeMappingStuff
INFO: targetDirectory -> targetDirectory
true,class org.eclipse.jdt.core.dom.Block,configParams.put(GraphDatabaseSettings.logical_logs_location.name(),targetDirectory.getAbsolutePath());
class org.eclipse.jdt.core.dom.BlocktrueconfigParams.put(GraphDatabaseSettings.logical_logs_location.name(),targetDirectory.toString());
METHOD_INVOCATION
Apr 22, 2021 5:11:51 PM type.change.Infer inferTransformation
INFO: (:[[9x2]].getAbsolutePath(), :[9x2].toString())
Apr 22, 2021 5:11:51 PM Utilities.ASTUtils printCodeMappingStuff
INFO: storeDir -> storeDir
true,class org.eclipse.jdt.core.dom.Block,return remoteStore.tryCatchingUp(fromAddress,expectedStoreId,storeDir,true);
class org.eclipse.jdt.core.dom.Blocktruereturn remoteStore.tryCatchingUp(fromAddress,expectedStoreId,storeDir.toFile(),true);
VARIABLE_REPLACED_WITH_METHOD_INVOCATION
Apr 22, 2021 5:11:54 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toFile())
Apr 22, 2021 5:11:54 PM Utilities.ASTUtils printCodeMappingStuff
INFO: targetDirectory -> targetDirectory
true,class org.eclipse.jdt.core.dom.Block,config.augment(logs_directory,targetDirectory.getCanonicalPath());
class org.eclipse.jdt.core.dom.Blocktrueconfig.augment(logs_directory,targetDirectory.toRealPath().toString());
METHOD_INVOCATION
Apr 22, 2021 5:11:59 PM type.change.Infer inferTransformation
INFO: (:[9x2], :[[9x2]].toRealPath())
Apr 22, 2021 5:11:59 PM Utilities.ASTUtils printCodeMappingStuff
INFO: targetDirectory -> targetDirectory
true,class org.eclipse.jdt.core.dom.Block,if(!directoryContainsDb(fileSystem,targetDirectory))
class org.eclipse.jdt.core.dom.Blocktrueif(!directoryContainsDb(targetDirectory))
METHOD_INVOCATION
Apr 22, 2021 5:12:01 PM type.change.Infer inferTransformation
INFO: NO EXPLAINABLE UPDATE FOUND!!!
