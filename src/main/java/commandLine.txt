python3 AdvancedServer.py "/home/ameya/Research/InferTypeChanges/RefactoringMiner-2.1.0/bin/" "/home/ameya/Research/Corpus/" "/home/ameya/Research/HttpServer/Output/" "/home/ameya/Research/HttpServer/Input/"



python AdvancedServer.py "/Users/ameya/Research/TypeChangeStudy/VanillaRMiner/RefactoringMiner-2.1.0/bin" "/Users/ameya/Research/TypeChangeStudy/Corpus" "/Users/ameya/Research/TypeChangeStudy/HttpServer/Output" "/Users/ameya/Research/TypeChangeStudy/HttpServer/Input"



//./RefactoringMiner -c /Users/ameya/Research/TypeChangeStudy/Corpus/Project_neo4j/neo4j 77a5e62f9d5a56a48f82b6bdd8519b18275bef1d -json /Users/ameya/Research/TypeChangeStudy/VanillaRMiner/output.json


//
//            zip(getChildren(root1), getChildren(root2), Tuple::of).forEach(t -> {
//                if (!t._1().isIsomorphicTo(t._2()))
//                    getCoveringNode(before, t._1()).flatMap(x -> getCoveringNode(after, t._2()).map(y -> Tuple.of(x, y)))
//                            .ifPresent(x -> upd.addSubExplanation(getUpdate(x._1(), x._2(), t._1(), t._2())));
//            });




"/Users/ameya/Research/TypeChangeStudy/InferTypeChanges/ResolvedResponses"


int x = 7;
long x = 7; -> long x = 7L;